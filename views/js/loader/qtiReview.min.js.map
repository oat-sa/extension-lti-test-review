{"version":3,"sources":["../review/plugins/navigation/review-panel/panel-data.js","tpl!taoReview/review/plugins/navigation/review-panel/tpl/panel","tpl!taoReview/review/plugins/navigation/review-panel/tpl/list","css!taoReview/review/plugins/navigation/review-panel/css/panel","../review/plugins/navigation/review-panel/panel.js","../review/plugins/navigation/review-panel/plugin.js","onLayerEnd0.js","module-create.js","/work/tao/instances/ce/tao/views/build/config-wrap-end-default.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * Helper that will build the dataset for the review panel in the expected format\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoReview/review/plugins/navigation/review-panel/panel-data',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * Compares two objects by their position properties\n     * @param {Object} a\n     * @param {Object} b\n     * @returns {Number}\n     */\n    const compareByPosition = (a, b) => a.position - b.position;\n\n    /**\n     * Refine the data from the test runner in order to provide the dataset expected by the review panel\n     * @param {testRunner} testRunner\n     * @returns {{}}\n     */\n    function reviewPanelDataService(testRunner) {\n        return {\n            /**\n             * Refines the test runner data and build the expected review panel map\n             * @returns {reviewPanelMap}\n             */\n            getReviewPanelMap() {\n                const testMap = testRunner.getTestMap();\n                let testScore = 0;\n                let testMaxScore = 0;\n                return {\n                    // rebuild the map keeping only relevant data, computing the score and sorting elements by position\n                    // make use of lodash to simplify as the source collection could be either an object or an array\n                    parts: _.map(testMap && testMap.parts, testPart => {\n                        let testPartScore = 0;\n                        let testPartMaxScore = 0;\n                        return {\n                            id: testPart.id,\n                            label: testPart.label,\n                            position: testPart.position,\n                            sections: _.map(testPart.sections, partSection => {\n                                let testSectionScore = 0;\n                                let testSectionMaxScore = 0;\n                                return {\n                                    id: partSection.id,\n                                    label: partSection.label,\n                                    position: partSection.position,\n                                    items: _.map(partSection.items, sectionItem => {\n                                        const score = sectionItem.score || 0;\n                                        const maxScore = sectionItem.maxScore || 0;\n                                        testSectionScore += score;\n                                        testSectionMaxScore += maxScore;\n                                        testPartScore += score;\n                                        testPartMaxScore += maxScore;\n                                        testScore += score;\n                                        testMaxScore += maxScore;\n                                        return {\n                                            id: sectionItem.id,\n                                            label: sectionItem.label,\n                                            position: sectionItem.position,\n                                            score,\n                                            maxScore\n                                        };\n                                    }).sort(compareByPosition),\n                                    score: testSectionScore,\n                                    maxScore: testSectionMaxScore\n                                };\n                            }).sort(compareByPosition),\n                            score: testPartScore,\n                            maxScore: testPartMaxScore\n                        };\n                    }).sort(compareByPosition),\n                    score: testScore,\n                    maxScore: testMaxScore\n                };\n            }\n        };\n    }\n\n    return reviewPanelDataService;\n});\n\n","\ndefine('tpl!taoReview/review/plugins/navigation/review-panel/tpl/panel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <header class=\\\"review-panel-header\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </header>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <span class=\\\"review-panel-score\\\">\";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <li class=\\\"review-panel-filter navigable\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <span class=\\\"review-panel-label\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        </li>\\n    \";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <footer class=\\\"review-panel-footer\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </footer>\\n\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"review-panel\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <ul class=\\\"review-panel-filters plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.filters), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </ul>\\n    <nav class=\\\"review-panel-content\\\"></nav>\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoReview/review/plugins/navigation/review-panel/tpl/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n<ul class=\\\"review-panel-list plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"review-panel-part collapsible\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.expanded), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"review-panel-label navigable\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"collapsible-arrow\\\"></span></span>\\n        <ul class=\\\"review-panel-block plain\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" expanded\";\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <li class=\\\"review-panel-section collapsible\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.expanded), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"review-panel-label navigable\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"collapsible-arrow\\\"></span></span>\\n                <ul class=\\\"review-panel-block plain\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n            </li>\\n            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"review-panel-item navigable\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                        <span class=\\\"review-panel-score\\\">\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.maxScore), {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\\n                    </li>\\n                \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\";\n  if (helper = helpers.maxScore) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxScore); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  \n  return \"-\";\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","\ndefine('css!taoReview/review/plugins/navigation/review-panel/css/panel',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoReview/review/plugins/navigation/review-panel/panel',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/autoscroll',\n    'ui/component',\n    'tpl!taoReview/review/plugins/navigation/review-panel/tpl/panel',\n    'tpl!taoReview/review/plugins/navigation/review-panel/tpl/list',\n    'css!taoReview/review/plugins/navigation/review-panel/css/panel.css'\n], function ($, _, __, hider, autoscroll, componentFactory, panelTpl, listTpl) {\n    'use strict';\n\n    /**\n     * @typedef {Object} reviewPanelElement\n     * @property {String} id - The element identifier\n     * @property {String} label - The displayed label\n     */\n\n    /**\n     * @typedef {reviewPanelElement} reviewPanelItem\n     * @property {Number} position - The position of the item within the test\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * @typedef {reviewPanelElement} reviewPanelSection\n     * @property {reviewPanelItem[]} items - The list of items contained in the section\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * @typedef {reviewPanelElement} reviewPanelPart\n     * @property {reviewPanelSection[]} sections - The list of sections contained in the test part\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * @typedef {Object} reviewPanelMap\n     * @property {reviewPanelPart[]} parts - The list of test parts to display\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * @typedef {Object} reviewPanelData\n     * @property {reviewPanelMap} testMap - The test map\n     * @property {Map} itemsMap - The list of items, indexed by identifier\n     * @property {Number} score - The test taker's score for the test\n     * @property {Number} maxScore - The max possible score for the test\n     */\n\n    /**\n     * @typedef {reviewPanelElement} reviewPanelFilter\n     * @property {String} title - The tooltip displayed on mouse over\n     * @property {Function<item, section, part>} [filter] - A callback function applied to filter the data\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    const defaults = {\n        headerLabel: __('TEST SCORE:'),\n        footerLabel: __('TOTAL'),\n        filters: [{\n            id: 'all',\n            label: __('All'),\n            title: __('Show all items')\n        }, {\n            id: 'incorrect',\n            label: __('Incorrect'),\n            title: __('Show incorrect items only'),\n            filter(item) {\n                return item.score !== item.maxScore;\n            }\n        }]\n    };\n\n    /**\n     * CSS classes involved in the review panel\n     * @type {Object}\n     */\n    const cssClasses = {\n        collapsible: 'collapsible',\n        expanded: 'expanded',\n        active: 'active'\n    };\n\n    /**\n     * CSS selectors that match some particular elements\n     * @type {Object}\n     */\n    const cssSelectors = {\n        collapsible: `.${cssClasses.collapsible}`,\n        collapsibleLabel: `.${cssClasses.collapsible} > .review-panel-label`,\n        expanded: `.${cssClasses.expanded}`,\n        active: `.${cssClasses.active}`,\n        navigable: '.navigable',\n        control: '[data-control]',\n        content: '.review-panel-content',\n        filtersContainer: '.review-panel-filters',\n        filter: '.review-panel-filter',\n        item: '.review-panel-item',\n        header: '.review-panel-header',\n        footer: '.review-panel-footer',\n        score: '.review-panel-score'\n    };\n\n    /**\n     * Finds an element by its control identifier\n     * @param {jQuery} $container\n     * @param {String} id\n     * @returns {jQuery}\n     */\n    const findControl = ($container, id) => $container.find(`[data-control=\"${id}\"]`);\n\n    /**\n     * Finds every expanded collapsible element within the provided target\n     * @param {jQuery} $target\n     * @returns {jQuery}\n     */\n    const findExpanded = $target => $target.find(cssSelectors.collapsible + cssSelectors.expanded);\n\n    /**\n     * Gets the icon class for a particular item\n     * @param {reviewPanelItem} item\n     * @returns {String}\n     */\n    const getItemIconCls = item => {\n        if (item.maxScore) {\n            if (item.score === item.maxScore) {\n                return 'item-correct';\n            } else {\n                return 'item-incorrect';\n            }\n        }\n        return 'item-info';\n    };\n\n    /**\n     * Reduces an array to another array\n     * @param {Array} array\n     * @param {Function} callback\n     * @returns {Array}\n     */\n    const reduceArray = (array, callback) => (array || []).reduce(callback, []);\n\n    /**\n     * Refines the data to display the panel with respect to the current filter\n     * @param {reviewPanelMap} map\n     * @param {Function} [filter] - A callback function applied to filter the data\n     * @returns {reviewPanelData}\n     */\n    const filterData = (map, filter) => {\n        const score = map && map.score || 0;\n        const maxScore = map && map.maxScore || 0;\n        const itemsMap = new Map();\n        if (!_.isFunction(filter)) {\n            filter = () => true;\n        }\n        return {\n            testMap: {\n                parts: reduceArray(map && map.parts, (testParts, testPart) => {\n                    const sections = reduceArray(testPart.sections, (partSections, partSection) => {\n                        const items = reduceArray(partSection.items, (sectionItems, sectionItem) => {\n                            sectionItem = Object.assign({}, sectionItem);\n                            sectionItem.cls = getItemIconCls(sectionItem);\n\n                            if (filter(sectionItem, partSection, testPart)) {\n                                sectionItems.push(sectionItem);\n                                itemsMap.set(sectionItem.id, sectionItem);\n                            }\n\n                            return sectionItems;\n                        });\n\n                        if (items.length) {\n                            partSections.push(Object.assign({}, partSection, {items}));\n                        }\n\n                        return partSections;\n                    });\n\n                    if (sections.length) {\n                        testParts.push(Object.assign({}, testPart, {sections}));\n                    }\n\n                    return testParts;\n                })\n            },\n            itemsMap,\n            score,\n            maxScore\n        };\n    };\n\n    /**\n     * Builds a review panel, that will show the test data with score.\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      // ...\n     *  };\n     *  const data = {\n     *      parts: [{\n     *          id: 'part-1',\n     *          label: 'Part 1',\n     *          sections: [{\n     *              id: 'section-1',\n     *              label: 'Section 1',\n     *              items: [{\n     *                  id: 'item-1',\n     *                  label: 'Item 1',\n     *                  position: 0,\n     *                  score: 2,\n     *                  maxScore: 2\n     *              }],\n     *              score: 2,\n     *              maxScore: 2\n     *          }],\n     *          score: 2,\n     *          maxScore: 2\n     *      }],\n     *      score: 2,\n     *      maxScore: 2\n     *  };\n     *  const component = reviewPanelFactory(container, config)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.headerLabel] - Header label\n     * @param {String} [config.footerLabel] - Footer label\n     * @param {reviewPanelFilter[]} [config.filters] - The list of available filters\n     * @param {reviewPanelMap|null} map\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     * @fires update When the navigation panel has been updated\n     * @fires collapse When a block element is collapsed\n     * @fires expand When a block element is expanded\n     * @fires active When an element is activated\n     * @fires filterchange When the active filter has changed\n     * @fires datachange When the panel data has changed\n     * @fires itemchange When an item is selected by the user (either a click on item or a filter)\n     */\n    function reviewPanelFactory(container, config = {}, map = null) {\n        let component;\n        let controls = null;\n        let activeFilter = null;\n        let activeItem = null;\n        let data = filterData(map);\n\n        /**\n         * Selects the active filter\n         * @param {String} filterId\n         */\n        const selectFilter = filterId => {\n            controls.$filters\n                .removeClass(cssClasses.active)\n                .filter(`[data-control=\"${filterId}\"]`)\n                .addClass(cssClasses.active);\n        };\n\n        /**\n         * Selects the active item\n         * @param {String} itemId\n         */\n        const selectItem = itemId => {\n            // first deactivate already active elements\n            controls.$content\n                .find(cssSelectors.active)\n                .removeClass(cssClasses.active);\n\n            // then find the chain of elements to activate\n            const $target = findControl(controls.$content, itemId);\n            if ($target.length) {\n                const $parents = $target.parentsUntil(controls.$content, cssSelectors.control);\n                $target\n                    .add($parents)\n                    .addClass(cssClasses.active);\n\n                // finally make sure the item is visible\n                autoscroll($target, controls.$content);\n            }\n        };\n\n        /**\n         * Apply a callback on each navigable element\n         * @param callback\n         */\n        const eachNavigable = callback => {\n            component.getElement()\n                .find(cssSelectors.navigable)\n                .each(callback);\n        };\n\n        /**\n         * Enables the keyboard navigation using 'tab' keys\n         */\n        const enableKeyboard = () => eachNavigable((index, el) => el.setAttribute('tabindex', index + 1));\n\n        /**\n         * Disables the keyboard navigation using 'tab' keys\n         */\n        const disableKeyboard = () => eachNavigable((index, el) => el.setAttribute('tabindex', -1));\n\n        /**\n         * Emits the itemchange event with respect to the current active item\n         */\n        const itemChange = () => {\n            /**\n             * @event itemchange\n             * @param {String} itemId\n             * @param {Number} position\n             */\n            component.trigger('itemchange', activeItem.id, activeItem.position);\n        };\n\n        /**\n         * Defines the reviewPanel API\n         * @type {reviewPanel}\n         */\n        const api = {\n            /**\n             * Gets the panel data\n             * @returns {reviewPanelData}\n             */\n            getData() {\n                return data;\n            },\n\n            /**\n             * Sets the panel data\n             * @param {reviewPanelMap} newMap\n             * @returns {reviewPanel}\n             * @fires datachange\n             */\n            setData(newMap) {\n                map = newMap;\n                data = filterData(newMap);\n\n                /**\n                 * @event datachange\n                 * @param {reviewPanelData} data\n                 */\n                this.trigger('datachange', data);\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active filter\n             * @returns {String|null}\n             */\n            getActiveFilter() {\n                return activeFilter && activeFilter.id;\n            },\n\n            /**\n             * Sets the active filter\n             * @param {String} filterId\n             * @returns {reviewPanel}\n             */\n            setActiveFilter(filterId) {\n                const {filters} = this.getConfig();\n                const foundFilter = filters.find(filter => filter.id === filterId);\n                if (foundFilter && (!activeFilter || activeFilter.id !== filterId)) {\n                    activeFilter = foundFilter;\n\n                    if (this.is('rendered')) {\n                        selectFilter(filterId);\n                        this.update();\n                    }\n\n                    /**\n                     * @event filterchange\n                     * @param {String} filterId\n                     */\n                    this.trigger('filterchange', filterId);\n                }\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active item\n             * @returns {String|null}\n             */\n            getActiveItem() {\n                return activeItem && activeItem.id;\n            },\n\n            /**\n             * Gets the position of the active item\n             * @returns {Number|null}\n             */\n            getActiveItemPosition() {\n                return activeItem && activeItem.position;\n            },\n\n            /**\n             * Sets the active item\n             * @param {String} itemId\n             * @returns {reviewPanel}\n             * @fires expand for each activated element\n             */\n            setActiveItem(itemId) {\n                if (data && data.itemsMap.has(itemId) && (!activeItem || activeItem.id !== itemId)) {\n                    activeItem = data.itemsMap.get(itemId);\n\n                    if (this.is('rendered')) {\n                        selectItem(itemId);\n                    }\n\n                    /**\n                     * @event active\n                     * @param {String} itemId\n                     */\n                    this.trigger('active', itemId);\n                }\n                return this;\n            },\n\n            /**\n             * Expands all the blocks from the given identifier and above\n             * @param {String} id\n             * @returns {reviewPanel}\n             * @fires expand for each expanded block\n             */\n            expand(id) {\n                if (this.is('rendered')) {\n                    const $target = findControl(controls.$content, id);\n\n                    if ($target.length) {\n                        // will expand the target, its parents and first child blocks\n                        let $collapsed = $target.parentsUntil(controls.$content, cssSelectors.collapsible)\n                            .add($target.find(cssSelectors.collapsible).filter(':first-child'));\n\n                        if ($target.is(cssSelectors.collapsible)) {\n                            $collapsed = $collapsed.add($target);\n                        }\n\n                        if ($collapsed.filter(cssSelectors.expanded).length !== $collapsed.length) {\n                            // first, collapse all expanded blocks\n                            this.collapse();\n\n                            // then expand the blocks\n                            $collapsed.each((index, el) => {\n                                el.classList.add(cssClasses.expanded);\n\n                                /**\n                                 * @event expand\n                                 * @param {String} id - the identifier of the expanded element\n                                 */\n                                this.trigger('expand', el.dataset.control);\n                            });\n\n                        }\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Collapse all the blocks from the given identifier and below\n             * @param {String|null} [id] - The identifier og the block to collapse. If none, all blocks will be targeted.\n             * @returns {reviewPanel}\n             * @fires collapse for each collapsed block\n             */\n            collapse(id = null) {\n                if (this.is('rendered')) {\n                    let $expanded = null;\n\n                    // select the elements to collapse\n                    if (id) {\n                        // only the expanded elements that belong to the provided identifier\n                        const $target = findControl(controls.$content, id);\n                        $expanded = findExpanded($target);\n                        if ($target.is(cssSelectors.expanded)) {\n                            $expanded = $expanded.add($target);\n                        }\n                    } else {\n                        // all expanded elements\n                        $expanded = findExpanded(controls.$content);\n                    }\n\n                    // apply the collapse\n                    $expanded.each((index, el) => {\n                        el.classList.remove(cssClasses.expanded);\n\n                        /**\n                         * @event collapse\n                         * @param {String} id - the identifier of the collapsed element\n                         */\n                        this.trigger('collapse', el.dataset.control);\n                    });\n                }\n\n                return this;\n            },\n\n            /**\n             * Expands or collapse the blocks related to the given identifier\n             * @param {String} id\n             * @returns {reviewPanel}\n             * @fires expand for each expanded block\n             * @fires collapse for each collapsed block\n             */\n            toggle(id) {\n                if (this.is('rendered')) {\n                    const $target = findControl(controls.$content, id);\n                    if ($target.length) {\n                        if ($target.is(cssSelectors.expanded)) {\n                            this.collapse(id);\n                        } else {\n                            this.expand(id);\n                        }\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Update the displayed list\n             * @returns {reviewPanel}\n             * @fires update once the display has been updated\n             */\n            update() {\n                if (this.is('rendered')) {\n                    let filteredData;\n                    if (data.score !== data.maxScore) {\n                        filteredData = filterData(map, activeFilter && activeFilter.filter);\n                    } else {\n                        filteredData = data;\n                    }\n\n                    controls.$content.html(listTpl(filteredData.testMap));\n                    controls.$headerScore.text(`${Math.floor(100 * filteredData.score / filteredData.maxScore) || 0}%`);\n                    controls.$footerScore.text(`${filteredData.score}/${filteredData.maxScore}`);\n                    hider.toggle(controls.$filters, filteredData.score !== filteredData.maxScore);\n\n                    if (!this.is('disabled')) {\n                        enableKeyboard();\n                    }\n\n                    /**\n                     * @event update\n                     * @param {reviewPanelData} filteredData\n                     */\n                    this.trigger('update', filteredData);\n                }\n\n                return this;\n            }\n        };\n\n        /**\n         * @typedef {component} reviewPanel\n         */\n        component = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(panelTpl)\n\n            // auto render on init\n            .on('init', function onReviewPanelInit() {\n                const initConfig = this.getConfig();\n                const {headerLabel, footerLabel, filters} = initConfig;\n\n                // setup the header\n                if (headerLabel) {\n                    initConfig.header = {\n                        label: headerLabel,\n                        score: '0%'\n                    };\n                }\n\n                // setup the footer\n                if (footerLabel) {\n                    initConfig.footer = {\n                        label: footerLabel,\n                        score: '0/0'\n                    };\n                }\n\n                // select the first filter if none is active\n                if (!activeFilter && Array.isArray(filters)) {\n                    activeFilter = filters.find(filter => filter.label);\n                }\n\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onReviewPanelRender() {\n                controls = {\n                    $headerScore: this.getElement().find(`${cssSelectors.header} ${cssSelectors.score}`),\n                    $footerScore: this.getElement().find(`${cssSelectors.footer} ${cssSelectors.score}`),\n                    $filtersContainer: this.getElement().find(cssSelectors.filtersContainer),\n                    $filters: this.getElement().find(cssSelectors.filter),\n                    $content: this.getElement().find(cssSelectors.content),\n                };\n\n                this.getElement().on('keydown', cssSelectors.navigable, e => {\n                    if(e.key === ' ' || e.key === 'Enter') {\n                        e.currentTarget.click();\n                    }\n                });\n\n                // change filter on click\n                controls.$filtersContainer.on('click', cssSelectors.filter, e => {\n                    if (!this.is('disabled')) {\n                        this.setActiveFilter(e.currentTarget.dataset.control);\n                    }\n                });\n\n                // expand/collapse blocks on click\n                controls.$content.on('click', cssSelectors.collapsibleLabel, e => {\n                    if (!this.is('disabled')) {\n                        this.toggle(e.currentTarget.parentElement.dataset.control);\n                    }\n                });\n\n                // select item\n                controls.$content.on('click', cssSelectors.item, e => {\n                    if (!this.is('disabled')) {\n                        const currentId = activeItem && activeItem.id;\n                        this.setActiveItem(e.currentTarget.dataset.control);\n                        if (activeItem && activeItem.id !== currentId) {\n                            itemChange();\n                        }\n                    }\n                });\n\n                this.update();\n\n                if (activeFilter) {\n                    selectFilter(activeFilter.id);\n                }\n\n                if (activeItem) {\n                    selectItem(activeItem.id);\n                    this.expand(activeItem.id);\n                }\n\n                /**\n                 * @event ready\n                 */\n                this.setState('ready', true)\n                    .trigger('ready');\n            })\n\n            // reflect enable/disabled state\n            .on('enable', () => enableKeyboard)\n            .on('disable', () => disableKeyboard)\n\n            // auto expand the block that contains the active item\n            .on('active', function onReviewPanelActiveItem(itemId) {\n                this.expand(itemId);\n            })\n\n            // make sure the active item remain selected and visible when updating the display\n            .on('update', function onReviewPanelUpdate(filteredData) {\n                if (activeItem) {\n                    // if the active item is not available anymore, select the first available one\n                    if (!filteredData.itemsMap.has(activeItem.id)) {\n                        controls.$content.find(`${cssSelectors.item}:nth(0)`).click();\n                    } else {\n                        selectItem(activeItem.id);\n                        this.expand(activeItem.id);\n                    }\n                }\n            })\n\n            // data update\n            .on('datachange', function onReviewPanelDataChange() {\n                this.update();\n            })\n\n            // free resources on dispose\n            .on('destroy', function onReviewPanelDestroy() {\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => component.init(config));\n\n        return component;\n    }\n\n    return reviewPanelFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoReview/review/plugins/navigation/review-panel/plugin',[\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'taoReview/review/plugins/navigation/review-panel/panel',\n    'taoReview/review/plugins/navigation/review-panel/panel-data',\n], function (\n    promiseTimeout,\n    pluginFactory,\n    reviewPanelFactory,\n    reviewPanelService\n) {\n    'use strict';\n\n    /**\n     * Test Review Plugin : Review Panel\n     * Displays a navigation panel allowing to see the whole test structure and give access to each element\n     */\n    return pluginFactory({\n        name: 'review-panel',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            this.getTestRunner()\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable());\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            return promiseTimeout(new Promise(resolve => {\n                const testRunner = this.getTestRunner();\n                const reviewPanelData = reviewPanelService(testRunner);\n                const reviewPanel = reviewPanelFactory(\n                    this.getAreaBroker().getArea('panel'),\n                    this.getConfig(),\n                    reviewPanelData.getReviewPanelMap()\n                );\n\n                // control the test runner from the review panel\n                reviewPanel\n                    .on('itemchange', (itemRef, position) => testRunner.jump(position, 'item'))\n                    .on('ready', resolve);\n\n                // reflect the test runner state to the review panel\n                testRunner\n                    .on('loaditem', itemRef => reviewPanel.setActiveItem(itemRef))\n                    .on(`plugin-show.${this.getName()}`, () => reviewPanel.show())\n                    .on(`plugin-hide.${this.getName()}`, () => reviewPanel.hide())\n                    .on(`plugin-enable.${this.getName()}`, () => reviewPanel.enable())\n                    .on(`plugin-disable.${this.getName()}`, () => reviewPanel.disable())\n                    .on('destroy', () => reviewPanel.destroy());\n            }));\n        }\n    });\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.review-panel{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;background-color:#f3f1ef;color:#222;position:relative;display:flex;flex-direction:column;justify-content:flex-start;cursor:default;width:250px;height:100%;padding:10px}.review-panel .review-panel-label{display:block;white-space:nowrap}.review-panel .review-panel-score{display:block;white-space:nowrap}.review-panel .collapsible>.review-panel-label{cursor:pointer;width:100%;line-height:3rem;padding:0 8px;font-size:1.5rem}.review-panel .collapsible>.review-panel-label .collapsible-arrow::before{font-family:\\'tao\\' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\e611\\\";line-height:inherit;float:right}.review-panel .collapsible>.review-panel-block{display:none}.review-panel .collapsible.expanded>.review-panel-label .collapsible-arrow::before{content:\\\"\\\\e610\\\"}.review-panel .collapsible.expanded>.review-panel-block{display:block}.review-panel.disabled .review-panel-filters .review-panel-filter{cursor:not-allowed}.review-panel.disabled .collapsible>.review-panel-label{cursor:not-allowed}.review-panel.disabled .review-panel-item{cursor:not-allowed}.review-panel :focus{outline:0 none}.review-panel:not(.disabled) .navigable{position:relative}.review-panel:not(.disabled) .navigable:focus:after{content:\\' \\';position:absolute;top:2px;left:2px;bottom:2px;right:2px;border:1px dashed #222}.review-panel:not(.disabled) .review-panel-filters .review-panel-filter:focus:after{top:-5px;left:-5px;bottom:-5px;right:-5px}.review-panel .review-panel-header{display:flex;flex-direction:row;justify-content:space-between;padding:5px 8px;background-color:#D4D5D7;color:#222}.review-panel .review-panel-header .review-panel-label{font-size:1.5rem;font-weight:600}.review-panel .review-panel-header .review-panel-score{font-size:1.5rem;font-weight:bold}.review-panel .review-panel-footer{display:flex;flex-direction:row;justify-content:space-between;padding:5px 8px;background-color:#f3f1ef;color:#222}.review-panel .review-panel-footer .review-panel-label{font-size:1.4rem;padding-left:30px}.review-panel .review-panel-footer .review-panel-score{font-size:1.2rem}.review-panel .review-panel-filters{display:flex;flex-direction:row;justify-content:space-evenly;padding:3rem 0 1rem 0}.review-panel .review-panel-filters .review-panel-filter{display:block;border-bottom:1px solid transparent;cursor:pointer;padding:0 8px}.review-panel .review-panel-filters .review-panel-filter.active{border-bottom:1px solid #222}.review-panel .review-panel-filters .review-panel-filter .review-panel-label{font-size:1.4rem;font-weight:bold}.review-panel .review-panel-content{flex:0 1 auto;overflow-y:auto}.review-panel .review-panel-part{margin-top:1px}.review-panel .review-panel-part>.review-panel-label{background-color:#dddfe2}.review-panel .review-panel-part>.review-panel-label:hover{background-color:#c6cacf}.review-panel .review-panel-part.active>.review-panel-label{background-color:#c0c4ca}.review-panel .review-panel-section>.review-panel-label{background-color:#efecea;border-bottom:1px solid #fff}.review-panel .review-panel-section>.review-panel-label:hover{background-color:#ebe8e4}.review-panel .review-panel-section.active>.review-panel-label{background-color:#ded9d4}.review-panel .review-panel-item{display:flex;flex-direction:row;justify-content:space-between;background:#fff;cursor:pointer;line-height:3rem;padding:0 8px;margin:1px 0}.review-panel .review-panel-item .review-panel-label{flex:1 1 auto;width:calc(100% - 30px);text-align:left;overflow:hidden;text-overflow:ellipsis}.review-panel .review-panel-item .review-panel-score{flex:0 0 auto;width:30px;text-align:right}.review-panel .review-panel-item:first-child{margin-top:0}.review-panel .review-panel-item.active{background:#f4f7f8}.review-panel .review-panel-item:hover{background:#eef3f5}.review-panel .review-panel-item .review-panel-label{font-size:1.4rem}.review-panel .review-panel-item .review-panel-score{font-size:1.2rem}.review-panel .review-panel-item .review-panel-label:before{font-family:\\'tao\\' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\' \\';display:inline-block;text-align:right;color:#ada194;width:30px;padding-right:5px;line-height:inherit}.review-panel .review-panel-item.item-info .review-panel-label:before{content:\\\"\\\\e63a\\\"}.review-panel .review-panel-item.item-correct .review-panel-label:before{content:\\\"\\\\e69f\\\"}.review-panel .review-panel-item.item-incorrect .review-panel-label:before{content:\\\"\\\\e69e\\\";color:#ba122b}\\n\\n/*# sourceMappingURL=panel.css.map */');\n","\ndefine(\"taoReview/loader/qtiReview.bundle\", function(){});\n","define(\"taoReview/loader/qtiReview.min\", [\"taoItems/loader/taoItems.min\",\"taoQtiItem/loader/taoQtiItem.min\",\"taoTests/loader/taoTests.min\",\"taoQtiTest/loader/taoQtiTest.min\",\"taoQtiTestPreviewer/loader/taoQtiTestPreviewer.min\"], function(){});\n"]}