{"version":3,"names":["define","hb","template","Handlebars","depth0","helpers","partials","data","compilerInfo","merge","context","runnerComponentFactory","runnerTpl","extractOptions","config","fullPage","readOnly","showScore","showCorrect","displaySectionTitles","displayItemTooltip","reviewLayout","pluginsOptions","plugins","qtiTestReviewFactory","container","arguments","length","testRunnerConfig","testDefinition","serviceCallId","testUri","resultId","providers","runner","id","module","bundle","category","proxy","communicator","options","loadFromBundle","on","onComponentInit","getConfig","setState","onComponentReady","destroy","_","urlUtil","configHelper","_defaults","bootstrap","serviceController","serviceExtension","_entries","timeout","testReviewConfigFactory","storage","from","getParameters","itemIdentifier","type","parameters","getServiceCallId","itemUri","isPlainObject","Object","assign","TypeError","getServiceController","getServiceExtension","getTestActionUrl","action","route","getItemActionUrl","getTimeout","getCommunicationConfig","communication","extension","controller","syncActions","service","params","interval","enabled","program1","stack1","call","score","hash","inverse","self","noop","fn","program","program2","helper","buffer","scoreText","escapeExpression","functionType","cls","name","disabled","icon","program4","label","program6","each","tabs","__","componentFactory","tabsFactory","capitalize","itemAnswerTpl","answerTabsTpl","getAnswerTab","status","itemAnswerFactory","controls","activeTab","api","getScore","setScore","is","scoreLine","$score","text","getHasNoAnswer","hasNoAnswer","setHasNoAnswer","getActiveTab","$status","skippedText","getStatus","setStatus","change","states","forEach","state","trigger","isCorrect","isSkipped","isInformational","isPartial","isPending","isDefaultState","setCorrect","setIncorrect","setSkipped","setInformational","setPartial","setPending","setNoScore","setDefault","itemAnswer","defaults","setTemplate","onItemAnswerInit","defer","render","onItemAnswerRender","$tabs","getElement","find","tabsByStatus","tabsByStatusWithCorrect","tabsByStatusWithoutCorrect","tabsComponent","setTabs","disable","enable","statusInit","onItemAnswerDestroy","init","correctTab","informationalTab","correctAnswerTab","incorrectTab","partialTab","pendingTab","noScoreTab","skippedTab","defaultTab","informational","correct","incorrect","partial","pending","\"no-score\"","skipped","default","promiseTimeout","pluginFactory","itemHelper","mapHelper","getItemResponse","testRunner","getTestContext","dataHolder","getDataHolder","response","responses","get","getItemCorrectResponse","declarations","getDeclarations","declaration","attributes","identifier","baseType","cardinality","isEmpty","correctResponse","mapEntries","size","toResponse","keys","setItemState","itemRunner","getOptions","getItemStatusType","item","withScore","isExternallyScored","pendingExternalScore","maxScore","getTestRunner","Promise","resolve","areaBroker","getAreaBroker","getArea","itemRef","getItem","getTestMap","statusType","includes","getContentArea","attr","getName","show","hide","control","unless","title","program8","buttons","buttonsTpl","buttonsFactory","disabledButtons","Map","enableElement","$el","prop","disableElement","disableButton","btn","set","enableButton","delete","toggleButton","has","component","onButtonsInit","onButtonsRender","e","currentTarget","dataset","classList","add","onButtonDisable","onButtonEnable","index","el","contains","focus","remove","clear","shortcut","namespaceHelper","testConfig","pluginShortcuts","shortcuts","allowShortcuts","key","namespaceAll","avoidInput","prevent","getNavigationArea","canDoNext","last","findLast","getJumps","jump","itemPosition","position","canDoPrevious","first","doNext","getState","next","doPrevious","previous","toggle","compareByPosition","a","b","getItemType","extractData","entry","unseen","extendReviewItemScope","numericLabel","reviewItem","ariaLabel","scoreType","accordionScoreLabel","getReviewPanelMap","testMap","parts","items","sections","nonInformationalCount","panelMap","map","part","section","reviewSection","chain","sortBy","value","sort","header","filters","program5","program7","footer","active","program3","expanded","program9","program11","$","hider","autoscroll","reviewDataHelper","panelTpl","listTpl","_Mathfloor","Math","floor","accordionReviewPanelFactory","activeFilter","activeItem","selectFilter","filterId","$filters","removeClass","cssClasses","filter","addClass","selectItem","itemId","$content","cssSelectors","$target","findControl","$parents","parentsUntil","eachNavigable","callback","navigable","enableKeyboard","setAttribute","disableKeyboard","itemChange","getData","setData","newMap","getActiveFilter","setActiveFilter","Array","isArray","foundFilter","getActiveItem","getActiveItemPosition","setActiveItem","expand","$collapsed","collapsible","collapse","$expanded","findExpanded","update","scorePercent","html","$headerScore","$footerScore","onReviewPanelInit","initConfig","headerLabel","footerLabel","onReviewPanelRender","$filtersContainer","filtersContainer","content","preventDefault","click","collapsibleLabel","parentElement","currentId","onReviewPanelActiveItem","onReviewPanelUpdate","onReviewPanelDataChange","onReviewPanelDestroy","$container","headerTitle","depth1","programWithDepth","itemButtonListFactory","_Mathfloor2","fizzyReviewPanelFactory","itemButtonListComponents","c","onItemClick","renderItemButtonListComponents","itemButtonListContainer","itemButtonListContainerElem","itemData","clone","itemButtonListComponent","push","values","eventifier","navigationDataServiceFactory","filteredTestMap","navigationDataService","getMap","getFilteredMap","setMap","computeMap","filterMap","isFunction","reduce","partId","sectionId","pick","createJumpTable","jumps","times","computeScore","mapValues","collection","property","getItemTypeForFilter","all","itemType","reviewPanelFactory","reviewPanelConfig","reviewPanel","getPanelArea","filteredMap","setTestMap","testContextBuilder","runnerNavigatorFactory","navigatorFactory","testContext","navigator","nextItem","buildTestContextFromPosition","previousItem","prev","nextSection","sectionStats","getSectionStats","getSection","total","helperMissing","areaBrokerFactory","proxyFactory","testStoreFactory","toolboxFactory","qtiItemRunner","assetManagerFactory","sequenceStoreService","testNavigatorFactory","layoutTpl","getSequenceNumber","getSequenceStore","loadTestStore","Date","now","install","_this","defaultSetTestMap","_len","args","_key","result","apply","getPlugins","plugin","setConfig","loadAreaBroker","$layout","contentWrapper","itemTool","toolbox","navigation","actionsBar","panel","sidebar","loadProxy","proxyProvider","load","loadItem","setComponent","getToolbox","assetManager","createJumplinks","target","blur","where","area","getContainer","direction","scope","ref","testNavigator","newTestContext","navigate","unloadItem","setTestContext","flush","getProxy","then","testData","testResponses","_ref","sequenceNumber","sequenceStore","setSequenceNumber","renderTo","append","getToolboxArea","renderItem","changeState","reject","view","baseUrl","assets","err","onItemRunnerInit","portableElements","onItemRunnerRender","getTestStore","promiseQueue","coreRequest","communicatorFactory","configFactory","queue","request","url","reqParams","contentType","noToken","method","background","sequential","configStorage","setOnline","success","catch","error","isConnectivityError","setOffline","callTestAction","callItemAction","loadCommunicator","d","document","i","s","createElement","getElementsByTagName","appendChild","styleSheet","cssText","createTextNode"],"sources":["/github/workspace/tao/views/build/config-wrap-start-default.js","../review/component/tpl/qtiTestReviewComponent!tpl","../review/component/css/qtiTestReviewComponent!css","../review/provider/css/qtiTestReviewProvider!css","../review/component/qtiTestReviewComponent.js","../review/config/qtiTestReviewConfig.js","tpl!ltiTestReview/review/plugins/content/item-answer/tpl/item-answer","tpl!ltiTestReview/review/plugins/content/item-answer/tpl/answer-tabs","css!ltiTestReview/review/plugins/content/item-answer/css/item-answer","../review/plugins/content/item-answer/item-answer.js","../review/plugins/content/item-answer/plugin.js","tpl!ltiTestReview/review/plugins/navigation/next-prev/tpl/buttons","css!ltiTestReview/review/plugins/navigation/next-prev/css/buttons","../review/plugins/navigation/next-prev/buttons.js","../review/plugins/navigation/next-prev/plugin.js","../review/plugins/navigation/review-panel/panel-data.js","tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/accordionPanel","tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/accordionList","css!ltiTestReview/review/plugins/navigation/review-panel/css/accordion-panel","../review/plugins/navigation/review-panel/accordionPanel.js","tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/fizzyPanel","tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/fizzyList","css!ltiTestReview/review/plugins/navigation/review-panel/css/fizzy-panel","../review/plugins/navigation/review-panel/fizzyPanel.js","../review/services/navigation-data.js","../review/plugins/navigation/review-panel/plugin.js","../review/services/navigator.js","../review/provider/tpl/qtiTestReviewProvider!tpl","../review/provider/qtiTestReviewProvider.js","../review/proxy/qtiTestReviewProxy.js","onLayerEnd0.js","module-create.js","/github/workspace/tao/views/build/config-wrap-end-default.js"],"sourcesContent":["\n","\ndefine('tpl!ltiTestReview/review/component/tpl/qtiTestReviewComponent', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"previewer-component\\\"></div>\";\n  }); });\n","\ndefine('css!ltiTestReview/review/component/css/qtiTestReviewComponent',[],function(){});\n","\ndefine('css!ltiTestReview/review/provider/css/qtiTestReviewProvider',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019-2022 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('ltiTestReview/review/component/qtiTestReviewComponent',[\n    'context',\n    'taoTests/runner/runnerComponent',\n    'tpl!ltiTestReview/review/component/tpl/qtiTestReviewComponent',\n    'css!ltiTestReview/review/component/css/qtiTestReviewComponent',\n    'css!ltiTestReview/review/provider/css/qtiTestReviewProvider'\n], function (context, runnerComponentFactory, runnerTpl) {\n    'use strict';\n\n    /**\n     * Extracts the test runner options from the config\n     * @param {Object} config\n     * @returns {Object}\n     */\n    const extractOptions = config => {\n        const {\n            fullPage = false,\n            readOnly = false,\n            showScore = false,\n            showCorrect = false,\n            displaySectionTitles = true,\n            displayItemTooltip = false,\n            reviewLayout = 'default',\n            pluginsOptions = {}\n        } = config;\n        return {fullPage, readOnly, showScore, showCorrect, displaySectionTitles, displayItemTooltip, reviewLayout, plugins: pluginsOptions};\n    };\n\n    /**\n     * Builds a component with test runner to review a test\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object} [config] - The testRunner options\n     * @param {Object[]} [config.plugins] - Additional plugins to load\n     * @param {Object[]} [config.pluginsOptions] - Options for the plugins\n     * @param {Boolean} [config.fullPage] - Force the review to occupy the full window.\n     * @param {Boolean} [config.readOnly] - Do not allow to modify the reviewed item.\n     * @param {Boolean} [config.showScore] - Allow to show the score.\n     * @param {Boolean} [config.showCorrect] - Allow to show the correct responses.\n     * @param {Boolean} [config.displaySectionTitles] - Allow to hide the section titles\n     * @param {Boolean} [config.displayItemTooltip] - Allow to show item tooltip in the review panel\n     * @param {String} [config.reviewLayout] - Name of the panel layout to render\n     * @param {Function} [template] - An optional template for the component\n     * @returns {review}\n     */\n    return function qtiTestReviewFactory(container, config = {}, template = null) {\n        const testRunnerConfig = {\n            testDefinition: config.testDefinition || 'test-container',\n            serviceCallId: config.testUri && config.testUri.resultId || 'review',\n            providers: {\n                runner: {\n                    id: 'qtiTestReviewProvider',\n                    module: 'ltiTestReview/review/provider/qtiTestReviewProvider',\n                    bundle: 'ltiTestReview/loader/ltiTestReview.min',\n                    category: 'runner'\n                },\n                proxy: {\n                    id: 'qtiTestReviewProxy',\n                    module: 'ltiTestReview/review/proxy/qtiTestReviewProxy',\n                    bundle: 'ltiTestReview/loader/ltiTestReview.min',\n                    category: 'proxy'\n                },\n                communicator: {\n                    id: 'request',\n                    module: 'core/communicator/request',\n                    bundle: 'loader/vendor.min',\n                    category: 'communicator'\n                },\n                plugins: config.plugins || []\n            },\n            options: extractOptions(config)\n        };\n\n        //extra context config\n        testRunnerConfig.loadFromBundle = !!context.bundle;\n\n        return runnerComponentFactory(container, testRunnerConfig, template || runnerTpl)\n            .on('render', function onComponentInit() {\n                const {fullPage, readOnly, showScore, showCorrect} = this.getConfig().options;\n                this.setState('fullpage', fullPage);\n                this.setState('readonly', readOnly);\n                this.setState('showscore', showScore);\n                this.setState('showcorrect', showCorrect);\n            })\n            .on('ready', function onComponentReady(runner) {\n                runner.on('destroy', () => this.destroy());\n            });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Config manager for the services proxy of the QTI Test Review\n *\n *  @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('ltiTestReview/review/config/qtiTestReviewConfig',[\n    'lodash',\n    'util/url',\n    'util/config'\n], function (_, urlUtil, configHelper) {\n    'use strict';\n\n    /**\n     * Some default config values\n     * @type {Object}\n     * @private\n     */\n    const _defaults = {\n        bootstrap: {\n            serviceController: 'Review',\n            serviceExtension: 'ltiTestReview'\n        }\n    };\n\n    /**\n     * The list of handled config entries. Each required entry is set to true, while optional entries are set to false.\n     * @type {Object}\n     * @private\n     */\n    const _entries = {\n        serviceCallId: true,\n        bootstrap: false,\n        timeout: false\n    };\n\n    /**\n     * Creates a config object for the proxy implementation\n     * @param {Object} config - Some required and optional config\n     * @param {String} config.serviceCallId - An identifier for the service call\n     * @param {String} [config.bootstrap.serviceController] - The name of the service controller\n     * @param {String} [config.bootstrap.serviceExtension] - The name of the extension containing the service controller\n     * @returns {Object}\n     */\n    return function testReviewConfigFactory(config) {\n        // protected storage\n        const storage = configHelper.from(config, _entries, _defaults);\n\n        // convert some values from seconds to milliseconds\n        if (storage.timeout) {\n            storage.timeout *= 1000;\n        } else {\n            /* eslint-disable-next-line */\n            storage.timeout = undefined;\n        }\n\n        // returns only a proxy storage object : no direct access to data is provided\n        return {\n            /**\n             * Gets the list of parameters\n             * @param {String|Object} [itemIdentifier]\n             * @returns {Object}\n             */\n            getParameters(itemIdentifier) {\n                const type = typeof itemIdentifier;\n                const parameters = {\n                    serviceCallId: this.getServiceCallId()\n                };\n\n                if (type === 'string') {\n                    // simple item identifier\n                    parameters.itemUri = itemIdentifier;\n                } else if (type === 'object' && _.isPlainObject(itemIdentifier)) {\n                    // structured item identifier (a list of parameters)\n                    Object.assign(parameters, itemIdentifier);\n                } else if (type !== 'undefined') {\n                    throw new TypeError('Wrong parameter type provided for itemIdentifier: ' + type + '. Only string or plain object are allowed!');\n                }\n\n                return parameters;\n            },\n\n            /**\n             * Gets the URI of the service call\n             * @returns {String}\n             */\n            getServiceCallId() {\n                return storage.serviceCallId;\n            },\n\n            /**\n             * Gets the name of the service controller\n             * @returns {String}\n             */\n            getServiceController() {\n                return storage.bootstrap.serviceController || _defaults.bootstrap.serviceController;\n            },\n\n            /**\n             * Gets the name of the extension containing the service controller\n             * @returns {String}\n             */\n            getServiceExtension() {\n                return storage.bootstrap.serviceExtension || _defaults.bootstrap.serviceExtension;\n            },\n\n            /**\n             * Gets an URL of a service action\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getTestActionUrl(action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters());\n            },\n\n            /**\n             * Gets an URL of a service action related to a particular item\n             * @param {String|Object} itemIdentifier - The URI of the item\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getItemActionUrl(itemIdentifier, action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters(itemIdentifier));\n            },\n\n            /**\n             * Gets the request timeout\n             * @returns {Number}\n             */\n            getTimeout() {\n                return storage.timeout;\n            },\n\n            /**\n             * Gets the config for the communication channel\n             * @returns {Object}\n             */\n            getCommunicationConfig() {\n                const communication = storage.bootstrap.communication || {};\n                const extension = communication.extension || this.getServiceExtension();\n                const controller = communication.controller || this.getServiceController();\n                const action = communication.action || 'message';\n                const syncActions = communication.syncActions || [];\n                const serviceCallId = this.getServiceCallId();\n                const service = communication.service || urlUtil.route(action, controller, extension, {serviceCallId});\n                const params = Object.assign({}, communication.params || {}, {service});\n\n                // convert some values from seconds to milliseconds\n                if (params.timeout) {\n                    params.timeout *= 1000;\n                } else {\n                    params.timeout = storage.timeout;\n                }\n                if (params.interval) {\n                    params.interval *= 1000;\n                }\n\n                return {\n                    enabled: communication.enabled,\n                    type: communication.type,\n                    params,\n                    syncActions\n                };\n            }\n        };\n    };\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/content/item-answer/tpl/item-answer', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.score), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  if (helper = helpers.scoreText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.scoreText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"item-answer\\\">\\n    <div class=\\\"item-answer-bar\\\">\\n        <div class=\\\"item-answer-tabs\\\"></div>\\n        <div class=\\\"item-answer-score\\\">\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showScore), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    </div>\\n    <div class=\\\"item-answer-status\\\"></div>\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!ltiTestReview/review/plugins/content/item-answer/tpl/answer-tabs', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"tab \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-tab-name=\\\"\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <button class=\\\"action navigable\\\" tabindex=\\\"0\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.disabled), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.label), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </button>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"disabled\";\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"answer-tabs\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.tabs), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\";\n  return buffer;\n  }); });\n","\ndefine('css!ltiTestReview/review/plugins/content/item-answer/css/item-answer',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/content/item-answer/item-answer',[\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/tabs',\n    'util/capitalize',\n    'tpl!ltiTestReview/review/plugins/content/item-answer/tpl/item-answer',\n    'tpl!ltiTestReview/review/plugins/content/item-answer/tpl/answer-tabs',\n    'css!ltiTestReview/review/plugins/content/item-answer/css/item-answer'\n], function (_, __, componentFactory, tabsFactory, capitalize, itemAnswerTpl, answerTabsTpl) {\n    'use strict';\n\n    /**\n     * @typedef {Object} itemAnswerConfig - The config for the item answer component.\n     * @property {String} [skippedText] - The text displayed when the item has the status \"skipped\"\n     * @property {String} [scoreText] - The text displayed to introduce the score\n     * @property {String} [status] - The status of the item from the list ['correct', 'incorrect', 'skipped', 'informational']\n     * @property {String} [score] - The student's score on the item\n     * @property {Boolean} [showScore] - Show the score\n     * @property {Boolean} [showCorrect] - Show the correct responses\n     */\n\n    /**\n     * Some default config\n     * @type {itemAnswerConfig}\n     */\n    const defaults = {\n        skippedText: __('No response'),\n        scoreText: __('Your Score:'),\n        status: 'informational',\n        showScore: true,\n        showCorrect: true,\n        score: ''\n    };\n\n    /**\n     * @param {String} status\n     * @returns {tabConfig}\n     */\n    function getAnswerTab(status) {\n        let label;\n        if (status === 'informational') {\n            label = __('Informational item');\n        } else {\n            label = __('Your response');\n        }\n\n        let icon;\n        let cls;\n        if (status === 'informational') {\n            icon = 'informational';\n            cls = 'informational';\n        } else if (status === 'pending') {\n            icon = 'time';\n            cls = 'pending';\n        } else if (status === 'correct') {\n            icon = 'correct';\n            cls = 'correct';\n        } else if (status === 'incorrect') {\n            icon = 'incorrect';\n            cls = 'incorrect';\n        } else if (status === 'partial') {\n            icon = 'score-partial';\n            cls = 'partial';\n        } else if (status === 'default') {\n            icon = 'answered';\n            cls = 'answered';\n        } else if (status === 'skipped') {\n            icon = 'skipped';\n            cls = 'skipped';\n        } else {\n            icon = null;\n            cls = null;\n        }\n\n        return {\n            name: 'answer',\n            label,\n            icon,\n            cls\n        };\n    }\n\n    /**\n     * Defines the tab containing correct response\n     * @type {tabConfig}\n     */\n    const correctTab = {\n        name: 'correct',\n        label: __('Correct response')\n    };\n\n    const informationalTab = getAnswerTab('informational');\n    const correctAnswerTab = getAnswerTab('correct');\n    const incorrectTab = getAnswerTab('incorrect');\n    const partialTab = getAnswerTab('partial');\n    const pendingTab = getAnswerTab('pending');\n    const noScoreTab = getAnswerTab('no-score');\n    const skippedTab = getAnswerTab('skipped');\n    const defaultTab = getAnswerTab('default');\n\n    /**\n     * Defines tabs by status with correct responses enabled\n     * @type {Object}\n     */\n    const tabsByStatusWithCorrect = {\n        informational: [informationalTab],\n        correct: [correctAnswerTab, correctTab],\n        incorrect: [incorrectTab, correctTab],\n        partial: [partialTab, correctTab],\n        pending: [pendingTab, correctTab],\n        'no-score': [noScoreTab],\n        skipped: [skippedTab],\n        default: [defaultTab]\n    };\n\n    /**\n     * Defines tabs by status with correct responses disabled\n     * @type {Object}\n     */\n    const tabsByStatusWithoutCorrect = {\n        informational: [informationalTab],\n        correct: [correctAnswerTab],\n        incorrect: [incorrectTab],\n        partial: [partialTab],\n        pending: [pendingTab],\n        'no-score': [noScoreTab],\n        skipped: [skippedTab],\n        default: [defaultTab]\n    };\n\n    /**\n     * List of possible states\n     * @type {String[]}\n     */\n    const states = ['correct', 'incorrect', 'skipped', 'informational', 'partial', 'pending', 'default'];\n\n    /**\n     * Builds a component that shows up the item status regarding the responses.\n     * States:\n     * - correct - Whether or not the item got correct responses\n     * - skipped - Whether or not the item has been skipped. This option only matters if `correct` is set.\n     * - informational - Whether or not the item is informational. If so, the component won't display anything.\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      // ...\n     *  };\n     *  const component = itemAnswerFactory(container, config)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {itemAnswerConfig} config - The config for the item answer component.\n     * @param {String} [config.skippedText] - The text displayed when the item has the status \"skipped\"\n     * @param {String} [config.scoreText] - The text displayed to introduce the score\n     * @param {String} [config.status] - The status of the item from the list ['correct', 'incorrect', 'skipped', 'informational']\n     * @param {String} [config.score] - The student's score on the item\n     * @param {Boolean} [config.showScore] - Show the score\n     * @param {Boolean} [config.showCorrect] - Show the correct responses\n     * @returns {itemAnswerComponent}\n     * @fires ready - When the component is ready to work\n     * @fires statuschange - Each time the status is changed, the status being given as parameter\n     * @fires tabchange - Each time a tab is activated, the name being given as parameter\n     */\n    function itemAnswerFactory(container, config) {\n        let controls = null;\n        let activeTab = 'answer';\n\n        const api = {\n            /**\n             * Gets the defined item score\n             * @returns {String}\n             */\n            getScore() {\n                return this.getConfig().score;\n            },\n\n            /**\n             * Defines the item score\n             * @param {String} score\n             * @returns {itemAnswerComponent}\n             */\n            setScore(score) {\n                if ((!score && 'number' !== typeof score) || !this.getConfig().showScore) {\n                    score = '';\n                }\n                this.getConfig().score = `${score}`;\n\n                if (this.is('rendered')) {\n                    const scoreLine =\n                        this.getConfig().score && `${this.getConfig().scoreText} ${this.getConfig().score}`;\n                    controls.$score.text(scoreLine);\n                }\n\n                return this;\n            },\n\n            /**\n             * If `showScore=false`, is equal to `status=skipped`.\n             * If `showScore=true`, can apply to any `status`\n             * @returns {Boolean}\n             */\n            getHasNoAnswer() {\n                return this.getConfig().hasNoAnswer;\n            },\n\n            /**\n             * @param {Boolean} hasNoAnswer\n             * @returns {itemAnswerComponent}\n             */\n            setHasNoAnswer(hasNoAnswer) {\n                this.getConfig().hasNoAnswer = hasNoAnswer;\n\n                if (this.is('rendered')) {\n                    const activeTab = this.getActiveTab();\n                    if (activeTab === 'answer' && hasNoAnswer) {\n                        controls.$status.text(this.getConfig().skippedText);\n                    } else {\n                        controls.$status.text('');\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Gets the item status\n             * @returns {String}\n             */\n            getStatus() {\n                return this.getConfig().status;\n            },\n\n            /**\n             * Defines the item status\n             * @param {String} status\n             * @returns {itemAnswerComponent}\n             * @fires statuschange\n             */\n            setStatus(status) {\n                const change = this.getConfig().status !== status;\n                this.getConfig().status = status;\n\n                // reflect the state onto the component\n                states.forEach(state => this.setState(state, status === state));\n\n                /**\n                 * @event statuschange\n                 * @param {String} status - The new status\n                 * @param {Boolean} change - If the status actually changed or not\n                 */\n                this.trigger('statuschange', status, change);\n                return this;\n            },\n\n            /**\n             * Gets the name of the active tab\n             * @returns {String}\n             */\n            getActiveTab() {\n                return activeTab;\n            },\n\n            /**\n             * Tells if the item got correct responses\n             * @returns {Boolean}\n             */\n            isCorrect() {\n                return this.is('correct');\n            },\n\n            /**\n             * Tells if the item got skipped\n             * @returns {Boolean}\n             */\n            isSkipped() {\n                return this.is('skipped') && !this.isCorrect();\n            },\n\n            /**\n             * Tells if the item is informational\n             * @returns {Boolean}\n             */\n            isInformational() {\n                return this.is('informational');\n            },\n\n            /**\n             * Tells if the item is informational\n             * @returns {Boolean}\n             */\n            isPartial() {\n                return this.is('partial');\n            },\n\n            /**\n             * Tells if the item is informational\n             * @returns {Boolean}\n             */\n            isPending() {\n                return this.is('pending');\n            },\n\n            /**\n             * Tells if the item is default\n             * @returns {Boolean}\n             */\n            isDefaultState() {\n                return this.is('default');\n            },\n\n            /**\n             * Defines the item as correct\n             * @returns {itemAnswerComponent}\n             */\n            setCorrect() {\n                return this.setStatus('correct');\n            },\n\n            /**\n             * Defines the item as incorrect\n             * @returns {itemAnswerComponent}\n             */\n            setIncorrect() {\n                return this.setStatus('incorrect');\n            },\n\n            /**\n             * Defines the item as incorrect and skipped\n             * @returns {itemAnswerComponent}\n             */\n            setSkipped() {\n                return this.setStatus('skipped');\n            },\n\n            /**\n             * Defines the item as informational\n             * @returns {itemAnswerComponent}\n             */\n            setInformational() {\n                return this.setStatus('informational');\n            },\n\n            /**\n             * Defines the item as partial\n             * @returns {itemAnswerComponent}\n             */\n            setPartial() {\n                return this.setStatus('partial');\n            },\n\n            /**\n             * Defines the item as pending\n             * @returns {itemAnswerComponent}\n             */\n            setPending() {\n                return this.setStatus('pending');\n            },\n\n            /**\n             * Defines the item as no-score\n             * @returns {itemAnswerComponent}\n             */\n            setNoScore() {\n                return this.setStatus('no-score');\n            },\n\n            /**\n             * Defines the item as default\n             * @returns {itemAnswerComponent}\n             */\n            setDefault() {\n                return this.setStatus('default');\n            }\n        };\n\n        /**\n         * @typedef {component} itemAnswerComponent\n         */\n        const itemAnswer = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(itemAnswerTpl)\n\n            // auto render on init\n            .on('init', function onItemAnswerInit() {\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onItemAnswerRender() {\n                controls = {\n                    $tabs: this.getElement().find('.item-answer-tabs'),\n                    $score: this.getElement().find('.item-answer-score'),\n                    $status: this.getElement().find('.item-answer-status')\n                };\n\n                const tabsByStatus = this.getConfig().showCorrect\n                    ? tabsByStatusWithCorrect\n                    : tabsByStatusWithoutCorrect;\n                let tabs = tabsByStatus[this.getStatus()];\n\n                const tabsComponent = tabsFactory(controls.$tabs, { activeTab, tabs })\n                    .setTemplate(answerTabsTpl)\n                    .on('tabchange', name => {\n                        activeTab = name;\n\n                        // status based on status and tab\n                        if (name === 'answer' && this.getHasNoAnswer()) {\n                            controls.$status.text(this.getConfig().skippedText);\n                        } else {\n                            controls.$status.text('');\n                        }\n\n                        /**\n                         * @event tabchange\n                         * @param {String} name\n                         */\n                        this.trigger('tabchange', name);\n                    })\n                    .on('ready', () => {\n                        /**\n                         * @event ready\n                         */\n                        this.setState('ready', true).trigger('ready');\n                    });\n\n                this.setState('show-score', this.getConfig().showScore)\n                    .setState('show-correct', this.getConfig().showCorrect)\n                    .on('statuschange', (status, change) => {\n                        if (change && tabs !== tabsByStatus[status]) {\n                            tabs = tabsByStatus[status];\n                            tabsComponent.setTabs(tabs);\n                            if (this.is('disabled')) {\n                                tabsComponent.disable();\n                            }\n                        } else {\n                            // make sure the tabchange is always triggered\n                            tabsComponent.trigger('tabchange', this.getActiveTab());\n                        }\n                    })\n                    .on('disable', () => tabsComponent.disable())\n                    .on('enable', () => tabsComponent.enable())\n                    .on('destroy', () => {\n                        tabsComponent.destroy();\n                    });\n\n                // make sure the status is properly set on init\n                const statusInit = `set${capitalize(this.getConfig().status)}`;\n                if ('function' === typeof this[statusInit]) {\n                    this[statusInit]();\n                }\n            })\n\n            // free resources on dispose\n            .on('destroy', function onItemAnswerDestroy() {\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => itemAnswer.init(config));\n\n        return itemAnswer;\n    }\n\n    return itemAnswerFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/content/item-answer/plugin',[\n    'lodash',\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/currentItem',\n    'taoQtiTest/runner/helpers/map',\n    'ltiTestReview/review/plugins/content/item-answer/item-answer'\n], function (_, promiseTimeout, pluginFactory, itemHelper, mapHelper, itemAnswerFactory) {\n    'use strict';\n\n    /**\n     * Gets the response of the current item\n     * @param {runner} testRunner\n     * @returns {Object}\n     */\n    const getItemResponse = testRunner => {\n        const context = testRunner.getTestContext();\n        const dataHolder = testRunner.getDataHolder();\n        let response = null;\n\n        if (context) {\n            const { itemIdentifier } = context;\n            const responses = dataHolder.get('testResponses');\n            response = responses[itemIdentifier];\n        }\n\n        return response;\n    };\n\n    /**\n     * Gets the correct response of the current item\n     * @param {runner} testRunner\n     * @returns {Object}\n     */\n    const getItemCorrectResponse = testRunner => {\n        const declarations = itemHelper.getDeclarations(testRunner);\n        const response = {};\n        _.forEach(declarations, declaration => {\n            const { attributes } = declaration;\n            const { identifier, baseType, cardinality } = attributes || {};\n            if (!_.isEmpty(declaration.correctResponse)) {\n                response[identifier] = {\n                    response: itemHelper.toResponse(declaration.correctResponse, baseType, cardinality)\n                };\n            } else if (declaration.mapEntries && _.size(declaration.mapEntries)) {\n                response[identifier] = {\n                    response: itemHelper.toResponse(_.keys(declaration.mapEntries), baseType, cardinality)\n                };\n            } else {\n                response[identifier] = {\n                    response: itemHelper.toResponse('', baseType, cardinality)\n                };\n            }\n        });\n        return response;\n    };\n\n    /**\n     * Replace the state of the current item\n     * @param {String} name\n     * @param {runner} testRunner\n     */\n    const setItemState = (name, testRunner) => {\n        const itemRunner = testRunner.itemRunner;\n        const { showCorrect } = testRunner.getOptions();\n        let response = null;\n\n        if (itemRunner) {\n            if (name === 'correct' && showCorrect) {\n                response = getItemCorrectResponse(testRunner);\n            } else if (testRunner.getTestContext()) {\n                response = getItemResponse(testRunner);\n            }\n\n            if (response) {\n                itemRunner.setState(response);\n            }\n        }\n    };\n\n    /**\n     * Should match to `review-panel` plugin's item types\n     * @param {Object} item\n     * @param {Boolean} withScore\n     * @returns {String}\n     */\n    const getItemStatusType = (item, withScore) => {\n        if (withScore) {\n            if (item.informational) {\n                return 'info';\n            }\n            if (item.isExternallyScored && item.pendingExternalScore) {\n                return 'score-pending';\n            }\n            if (item.maxScore && item.score > 0 && item.score === item.maxScore) {\n                return 'correct';\n            }\n            if (item.maxScore && item.score === 0) {\n                return 'incorrect';\n            }\n            if (item.maxScore && item.score > 0 && item.score < item.maxScore) {\n                return 'score-partial';\n            }\n            return 'no-score';\n        } else {\n            if (item.informational) {\n                return 'info';\n            }\n            if (item.skipped) {\n                return 'skipped';\n            }\n            return 'default';\n        }\n    };\n\n    /**\n     * Test Review Plugin : Item Answer Tabs\n     * Displays a tabs bar that allows to switch between responses and correct responses\n     */\n    return pluginFactory({\n        name: 'item-answer',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            this.getTestRunner()\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable());\n        },\n\n        /**\n         * Called during the runner's render phase\n         * @returns {Promise}\n         */\n        render() {\n            return promiseTimeout(\n                new Promise(resolve => {\n                    const testRunner = this.getTestRunner();\n                    const areaBroker = this.getAreaBroker();\n                    const { showScore, showCorrect } = testRunner.getOptions();\n                    const itemAnswer = itemAnswerFactory(\n                        areaBroker.getArea('itemTool'),\n                        Object.assign({ showScore, showCorrect }, this.getConfig())\n                    );\n\n                    // control the test runner from the review panel\n                    itemAnswer.on('tabchange', name => setItemState(name, testRunner)).on('ready', resolve);\n\n                    // reflect the test runner state to the review panel\n                    testRunner\n                        .on('renderitem', itemRef => {\n                            const item = mapHelper.getItem(testRunner.getTestMap(), itemRef);\n\n                            const statusType = getItemStatusType(item, showScore);\n                            if (statusType === 'info') {\n                                itemAnswer.setInformational();\n                            } else if (statusType === 'score-pending') {\n                                itemAnswer.setPending();\n                            } else if (statusType === 'correct') {\n                                itemAnswer.setCorrect();\n                            } else if (statusType === 'incorrect') {\n                                itemAnswer.setIncorrect();\n                            } else if (statusType === 'score-partial') {\n                                itemAnswer.setPartial();\n                            } else if (statusType === 'default') {\n                                itemAnswer.setDefault();\n                            } else if (statusType === 'skipped') {\n                                itemAnswer.setSkipped();\n                            } else {\n                                itemAnswer.setNoScore();\n                            }\n\n                            itemAnswer.setHasNoAnswer(item.skipped);\n\n                            let score = '';\n                            if (\n                                ['correct', 'incorrect', 'score-partial', 'score-pending'].includes(statusType) &&\n                                item.maxScore\n                            ) {\n                                score = `${item.score || 0}/${item.maxScore}`;\n                            }\n                            itemAnswer.setScore(score);\n\n                            // remove all tabindex's inside item for right navigation\n                            areaBroker.getContentArea().find('[tabindex]').attr('tabindex', -1);\n                        })\n                        .on(`plugin-show.${this.getName()}`, () => itemAnswer.show())\n                        .on(`plugin-hide.${this.getName()}`, () => itemAnswer.hide())\n                        .on(`plugin-enable.${this.getName()}`, () => itemAnswer.enable())\n                        .on(`plugin-disable.${this.getName()}`, () => itemAnswer.disable())\n                        .on(`plugin-destroy.${this.getName()}`, () => itemAnswer.destroy());\n                })\n            );\n        }\n    });\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/next-prev/tpl/buttons', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <button data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small btn-info btn-group action\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" tabindex=\\\"0\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </button>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" no-label\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \" no-icon\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n        \";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <span class=\\\"label\\\">\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"next-prev\\\">\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.buttons), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('css!ltiTestReview/review/plugins/navigation/next-prev/css/buttons',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/next-prev/buttons',[\n    'lodash',\n    'i18n',\n    'ui/component',\n    'tpl!ltiTestReview/review/plugins/navigation/next-prev/tpl/buttons',\n    'css!ltiTestReview/review/plugins/navigation/next-prev/css/buttons'\n], function (_, __, componentFactory, buttonsTpl) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    const defaults = {\n        buttons: [{\n            title: __('Go to the next item'),\n            cls: 'right',\n            icon: 'right',\n            text: __('Next'),\n            control: 'next'\n        },{\n            title: __('Go to the previous item'),\n            icon: 'left',\n            control: 'prev'\n        }]\n    };\n\n    /**\n     * Builds a component\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      buttons: [{\n     *          icon: 'left',\n     *          text: 'Previous',\n     *          control: 'prev'\n     *      }, {\n     *          icon: 'right',\n     *          cls: 'right',\n     *          text: 'Next',\n     *          control: 'next'\n     *      }]\n     *  };\n     *  const component = buttonsFactory(container, config)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     */\n    function buttonsFactory(container, config) {\n        const disabledButtons = new Map();\n\n        const enableElement = $el => $el.prop('disabled', false);\n        const disableElement = $el => $el.prop('disabled', true);\n\n        const api = {\n            /**\n             * Disables a button\n             * @param {String} btn\n             * @returns {buttons}\n             * * @fires disable-button\n             */\n            disableButton(btn) {\n                disabledButtons.set(btn, btn);\n                if (this.is('rendered') && !this.is('disabled')) {\n                    disableElement(this.getElement().find(`[data-control=\"${btn}\"]`));\n                }\n\n                /**\n                 * @event disable-button\n                 * @param {Object} control\n                 */\n                this.trigger('disable-button', btn);\n                return this;\n            },\n\n            /**\n             * Enables a button\n             * @param {String} btn\n             * @returns {buttons}\n             * @fires enable-button\n             */\n            enableButton(btn) {\n                disabledButtons.delete(btn);\n                if (this.is('rendered') && !this.is('disabled')) {\n                    enableElement(this.getElement().find(`[data-control=\"${btn}\"]`));\n                }\n\n                /**\n                 * @event enable-button\n                 * @param {Object} control\n                 */\n                this.trigger('enable-button', btn);\n                return this;\n            },\n\n            /**\n             * Enables or disables a button\n             * @param {String} btn\n             * @param {Boolean|null} state - Force enable (`true`) or disable (`false`). By default auto select.\n             * @returns {buttons}\n             * @fires enable-button\n             * @fires disable-button\n             */\n            toggleButton(btn, state = null) {\n                if (state === null) {\n                    state = disabledButtons.has(btn);\n                }\n                if (state) {\n                    this.enableButton(btn);\n                } else {\n                    this.disableButton(btn);\n                }\n                return this;\n            }\n        };\n        const component = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(buttonsTpl)\n\n            // auto render on init\n            .on('init', function onButtonsInit() {\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onButtonsRender() {\n                this.getElement().on('click', '.action', e => {\n                    const control = e.currentTarget.dataset.control;\n                    if (control && !this.is('disabled') && !disabledButtons.has(control)) {\n                        e.currentTarget.classList.add('active');\n                        /**\n                         * @event click\n                         * @param {Object} control\n                         */\n                        this.trigger('click', control);\n                    }\n                });\n\n                /**\n                 * @event ready\n                 */\n                this.setState('ready', true)\n                    .trigger('ready');\n            })\n\n            // take care of the disable state\n            .on('disable', function onButtonDisable() {\n                if (this.is('rendered')) {\n                    disableElement(this.getElement().find('[data-control]'));\n                }\n            })\n            .on('enable', function onButtonEnable() {\n                if (this.is('rendered')) {\n                    this.getElement()\n                        .find('[data-control]')\n                        .each((index, el) => {\n                            const control = el.dataset.control;\n                            if (!disabledButtons.has(control)) {\n                                el.disabled = false;\n                            }\n                            if (el.classList.contains('active')) {\n                                if (!disabledButtons.has(control)) {\n                                    el.focus();\n                                }\n                                el.classList.remove('active');\n                            }\n                        });\n                }\n            })\n\n            // free resources on dispose\n            .on('destroy', () => {\n                disabledButtons.clear();\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => component.init(config));\n\n        return component;\n    }\n\n    return buttonsFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Next and Previous\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/next-prev/plugin',[\n    'lodash',\n    'util/shortcut',\n    'util/namespace',\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/map',\n    'ltiTestReview/review/plugins/navigation/next-prev/buttons'\n], function (\n    _,\n    shortcut,\n    namespaceHelper,\n    promiseTimeout,\n    pluginFactory,\n    mapHelper,\n    buttonsFactory\n) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name: 'next-prev',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n            const testConfig = testRunner.getConfig();\n            const pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            /**\n             * pluginShortcuts: {\n             *  next: 'shortkey',\n             *  prev: 'shortkey'\n             * }\n             */\n            if (testConfig.allowShortcuts) {\n                Object.keys(pluginShortcuts).forEach(key => {\n                    shortcut.add(\n                        namespaceHelper.namespaceAll(pluginShortcuts[key], this.getName(), true),\n                        () => testRunner.trigger(`nav-${key}`, true),\n                        {\n                            avoidInput: true,\n                            prevent: true\n                        }\n                    );\n                });\n            }\n\n            // disabled by default\n            this.disable();\n\n            //change plugin state\n            testRunner\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable())\n                .on('hidenav', () => this.hide())\n                .on('shownav', () => this.show())\n                .on('destroy', () => shortcut.remove(`.${this.getName()}`));\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            return promiseTimeout(new Promise(resolve => {\n                const testRunner = this.getTestRunner();\n                const buttons = buttonsFactory(this.getAreaBroker().getNavigationArea());\n\n                /**\n                 * Check if the \"Next\" functionality should be available or not\n                 * @returns {Boolean}\n                 */\n                const canDoNext = () => {\n                    const last = _.findLast(mapHelper.getJumps(testRunner.getTestMap()), jump => jump && jump.identifier);\n                    const context = testRunner.getTestContext();\n                    return last && context.itemPosition < last.position;\n                };\n\n                /**\n                 * Check if the \"Previous\" functionality should be available or not\n                 * @returns {Boolean}\n                 */\n                const canDoPrevious = () => {\n                    const first = _.find(mapHelper.getJumps(testRunner.getTestMap()), jump => jump && jump.identifier);\n                    const context = testRunner.getTestContext();\n                    return first && context.itemPosition > first.position;\n                };\n\n                /**\n                 * Plugin behavior: move forward\n                 */\n                const doNext = () => {\n                    if (this.getState('enabled') !== false && canDoNext()) {\n                        testRunner.trigger('disablenav');\n                        testRunner.next();\n                    }\n                };\n\n                /**\n                 * Plugin behavior: move backward\n                 */\n                const doPrevious = () => {\n                    if (this.getState('enabled') !== false && canDoPrevious()) {\n                        testRunner.trigger('disablenav');\n                        testRunner.previous();\n                    }\n                };\n\n                /**\n                 * Disable/enable Next/Prev buttons\n                 */\n                const toggle = () => {\n                    buttons.toggleButton('prev', canDoPrevious());\n                    buttons.toggleButton('next', canDoNext());\n                };\n\n                // control the test runner from the navigation buttons\n                buttons\n                    .on('click', btn => testRunner.trigger(`nav-${btn}`))\n                    .on('ready', () => {\n                        if (this.getState('enabled') === false) {\n                            buttons.disable();\n                        }\n                        resolve();\n                    });\n\n                // reflect the test runner state to the navigation buttons and performs the navigation on demand\n                testRunner\n                    .on('loaditem testmapchange', toggle)\n                    .on('nav-next', doNext)\n                    .on('nav-prev', doPrevious)\n                    .on(`plugin-show.${this.getName()}`, () => buttons.show())\n                    .on(`plugin-hide.${this.getName()}`, () => buttons.hide())\n                    .on(`plugin-enable.${this.getName()}`, () => buttons.enable())\n                    .on(`plugin-disable.${this.getName()}`, () => buttons.disable())\n                    .on(`plugin-destroy.${this.getName()}`, () => buttons.destroy());\n            }));\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019-2023 Open Assessment Technologies SA ;\n */\n/**\n * Helper that will build the dataset for the review panel in the expected format\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/panel-data',['lodash', 'i18n'], function (_, __) {\n    'use strict';\n\n    /**\n     * @typedef {mapEntry} reviewPanelSection\n     * @property {mapEntry[]} items - The list of items contained in the section\n     */\n\n    /**\n     * @typedef {mapEntry} reviewPanelPart\n     * @property {reviewPanelSection[]} sections - The list of sections contained in the test part\n     */\n\n    /**\n     * @typedef {Object} reviewPanelMap\n     * @property {reviewPanelPart[]} parts - The list of test parts to display\n     * @property {Map} items - A map of items, indexed by identifiers\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * Compares two objects by their position properties\n     * @param {mapEntry} a\n     * @param {mapEntry} b\n     * @returns {Number}\n     */\n    const compareByPosition = (a, b) => a.position - b.position;\n\n    /**\n     * Gets the type for a particular item\n     * (used for example to show icon: if 'xxx' type, then `class=\"item-xxx\"`)\n     * @param {mapEntry} item\n     * @param {Boolean} withScore\n     * @returns {String}\n     */\n    const getItemType = (item, withScore) => {\n        if (withScore) {\n            if (item.informational) {\n                return 'info';\n            }\n            if (item.isExternallyScored && item.pendingExternalScore) {\n                return 'score-pending';\n            }\n            if (item.maxScore && item.score > 0 && item.score === item.maxScore) {\n                return 'correct';\n            }\n            if (item.maxScore && item.score === 0) {\n                return 'incorrect';\n            }\n            if (item.maxScore && item.score > 0 && item.score < item.maxScore) {\n                return 'score-partial';\n            }\n            return 'no-score';\n        } else {\n            if (item.informational) {\n                return 'info';\n            }\n            if (item.skipped) {\n                return 'skipped';\n            }\n            return 'default';\n        }\n    };\n\n    /**\n     * Extracts data from a mapEntry\n     * @param {mapEntry} entry\n     * @param {Boolean} withScore\n     * @returns {mapEntry}\n     */\n    const extractData = (entry, withScore) => {\n        const { id, label, position, informational, skipped, title, unseen, score, maxScore } = entry || {};\n        const data = { id, label, position, withScore };\n        if (withScore) {\n            Object.assign(data, { score, maxScore });\n        }\n        if ('undefined' !== typeof informational) {\n            data.informational = informational;\n        }\n        if ('undefined' !== typeof skipped) {\n            data.skipped = skipped;\n        }\n        if ('undefined' !== typeof unseen) {\n            data.unseen = unseen;\n        }\n        if ('undefined' !== typeof title) {\n            data.title = title;\n        }\n        return data;\n    };\n\n    /**\n     * @typedef {Object} ReviewItem\n     * @property {String} id - item id\n     * @property {Number} position - 0-based list index\n     * @property {String} label - displayed text\n     * @property {String} numericLabel - displayed number (alternative to label)\n     * @property {String} ariaLabel\n     * @property {Number} score - the item's current score\n     * @property {Number} maxScore - the item's max possible score\n     * @property {Boolean} informational\n     * @property {Boolean} skipped\n     * @property {Boolean} unseen\n     * @property {String} type - 'correct'/'incorrect'/'info'/'skipped'/'score-pending'/'score-partial'/'default'\n     * @property {String} status - 'answered'/'viewed'/'unseen'\n     * @property {String} scoreType - 'correct'/'incorrect'/'score-pending'/'score-partial'/null\n     * @property {String} icon - 'info' or null\n     */\n    /**\n     * Adds missing properties to a reviewItem, to support fizzyPanel UI\n     * @param {mapEntry} item - the original test item entry\n     * @param {mapEntry} entry - item, will be mutated\n     * @param {String} numericLabel\n     * @returns {ReviewItem}\n     */\n    const extendReviewItemScope = (item, entry, numericLabel) => {\n        const reviewItem = Object.assign({}, entry);\n        const type = reviewItem.type;\n\n        // Add properties 'numericLabel', 'icon', 'ariaLabel', 'scoreType', 'status'\n        reviewItem.numericLabel = type === 'info' ? '' : `${numericLabel}`;\n\n        reviewItem.icon = type === 'info' ? 'info' : null;\n\n        reviewItem.ariaLabel = type === 'info' ? __('Informational item') : __('Question %s', reviewItem.numericLabel);\n\n        //used in oat-sa/tao-core-ui-fe itemButtonList\n        reviewItem.scoreType = null;\n        if (type === 'correct') {\n            reviewItem.scoreType = 'correct';\n        } else if (type === 'incorrect') {\n            reviewItem.scoreType = 'incorrect';\n        } else if (type === 'score-pending') {\n            reviewItem.scoreType = 'score-pending';\n        } else if (type === 'score-partial') {\n            reviewItem.scoreType = 'score-partial';\n        }\n\n        if (reviewItem.unseen) {\n            reviewItem.status = 'unseen';\n        } else if (type !== 'info' && type !== 'skipped') {\n            reviewItem.status = 'answered';\n        } else {\n            reviewItem.status = 'viewed';\n        }\n\n        //for accordionList.tpl\n        reviewItem.accordionScoreLabel = '-';\n        if (['correct', 'incorrect', 'score-partial', 'score-pending'].includes(reviewItem.type) && item.maxScore) {\n            reviewItem.accordionScoreLabel = `${item.score || 0}/${item.maxScore}`;\n        }\n\n        return reviewItem;\n    };\n\n    return {\n        /**\n         * Refines the test runner data and builds the expected review panel map\n         * @param {testMap} testMap\n         * @param {Boolean} withScore\n         * @returns {reviewPanelMap}\n         */\n        getReviewPanelMap(testMap, withScore) {\n            const { parts, score, maxScore } = testMap;\n            const items = new Map();\n            const sections = new Map();\n            let nonInformationalCount = 0;\n\n            // rebuild the map keeping only relevant data, and sorting elements by position\n            const panelMap = {\n                parts: _.map(parts, part =>\n                    Object.assign(extractData(part, withScore), {\n                        sections: _.map(part.sections, section => {\n                            const reviewSection = Object.assign(extractData(section, withScore), {\n                                // must sort items by position before treating data, so we can assign accurate numericLabels\n                                items: _.chain(section.items)\n                                    .sortBy('position')\n                                    .map(item => {\n                                        let reviewItem = extractData(item, withScore);\n                                        reviewItem.type = getItemType(item, withScore);\n                                        if (reviewItem.type !== 'info') {\n                                            nonInformationalCount++;\n                                        }\n                                        reviewItem = extendReviewItemScope(item, reviewItem, nonInformationalCount);\n                                        items.set(item.id, reviewItem);\n                                        return reviewItem;\n                                    })\n                                    .value()\n                            });\n                            sections.set(section.id, reviewSection);\n                            return reviewSection;\n                        }).sort(compareByPosition)\n                    })\n                ).sort(compareByPosition),\n                withScore,\n                items,\n                sections\n            };\n\n            if (withScore) {\n                Object.assign(panelMap, { score, maxScore });\n            }\n\n            return panelMap;\n        }\n    };\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/accordionPanel', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <header class=\\\"review-panel-header\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </header>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <span class=\\\"review-panel-score\\\">\";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <ul class=\\\"review-panel-filters plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.filters), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </ul>\\n\";\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <li class=\\\"review-panel-filter navigable\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <span class=\\\"review-panel-label\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        </li>\\n    \";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <footer class=\\\"review-panel-footer\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </footer>\\n\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"review-panel accordion\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.filters), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <nav class=\\\"review-panel-content\\\"></nav>\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/accordionList', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n<ul class=\\\"review-panel-list plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"review-panel-part collapsible\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.expanded), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"review-panel-label navigable\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"collapsible-arrow\\\"></span></span>\\n        <ul class=\\\"review-panel-block plain\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" expanded\";\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <li class=\\\"review-panel-section collapsible\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.expanded), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"review-panel-label navigable\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"collapsible-arrow\\\"></span></span>\\n                <ul class=\\\"review-panel-block plain\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n            </li>\\n            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"review-panel-item navigable\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.type), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.withScore), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                    </li>\\n                \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" item-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                        <span class=\\\"review-panel-score\\\">\";\n  if (helper = helpers.accordionScoreLabel) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.accordionScoreLabel); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                    \";\n  return buffer;\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }); });\n","\ndefine('css!ltiTestReview/review/plugins/navigation/review-panel/css/accordion-panel',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/accordionPanel',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/autoscroll',\n    'ui/component',\n    'ltiTestReview/review/plugins/navigation/review-panel/panel-data',\n    'tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/accordionPanel',\n    'tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/accordionList',\n    'css!ltiTestReview/review/plugins/navigation/review-panel/css/accordion-panel.css'\n], function (\n    $,\n    _,\n    __,\n    hider,\n    autoscroll,\n    componentFactory,\n    reviewDataHelper,\n    panelTpl,\n    listTpl\n) {\n    'use strict';\n\n    /**\n     * @typedef {mapEntry} reviewPanelFilter\n     * @property {String} title - The tooltip displayed on mouse over\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    const defaults = {\n        headerLabel: __('TEST SCORE:'),\n        footerLabel: __('TOTAL'),\n        showScore: true,\n        filters: [{\n            id: 'all',\n            label: __('All'),\n            title: __('Show all items')\n        }, {\n            id: 'incorrect',\n            label: __('Incorrect'),\n            title: __('Show incorrect items only')\n        }]\n    };\n\n    /**\n     * CSS classes involved in the review panel\n     * @type {Object}\n     */\n    const cssClasses = {\n        collapsible: 'collapsible',\n        expanded: 'expanded',\n        active: 'active'\n    };\n\n    /**\n     * CSS selectors that match some particular elements\n     * @type {Object}\n     */\n    const cssSelectors = {\n        collapsible: `.${cssClasses.collapsible}`,\n        collapsibleLabel: `.${cssClasses.collapsible} > .review-panel-label`,\n        expanded: `.${cssClasses.expanded}`,\n        active: `.${cssClasses.active}`,\n        navigable: '.navigable',\n        control: '[data-control]',\n        content: '.review-panel-content',\n        filtersContainer: '.review-panel-filters',\n        filter: '.review-panel-filter',\n        item: '.review-panel-item',\n        header: '.review-panel-header',\n        footer: '.review-panel-footer',\n        score: '.review-panel-score'\n    };\n\n    /**\n     * Finds an element by its control identifier\n     * @param {jQuery} $container\n     * @param {String} id\n     * @returns {jQuery}\n     */\n    const findControl = ($container, id) => $container.find(`[data-control=\"${id}\"]`);\n\n    /**\n     * Finds every expanded collapsible element within the provided target\n     * @param {jQuery} $target\n     * @returns {jQuery}\n     */\n    const findExpanded = $target => $target.find(cssSelectors.collapsible + cssSelectors.expanded);\n\n    /**\n     * Builds a review panel, that will show the test data with score.\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      // ...\n     *  };\n     *  const testMap = {\n     *      parts: [{\n     *          id: 'part-1',\n     *          label: 'Part 1',\n     *          sections: [{\n     *              id: 'section-1',\n     *              label: 'Section 1',\n     *              items: [{\n     *                  id: 'item-1',\n     *                  label: 'Item 1',\n     *                  position: 0,\n     *                  score: 2,\n     *                  maxScore: 2\n     *              }],\n     *              score: 2,\n     *              maxScore: 2\n     *          }],\n     *          score: 2,\n     *          maxScore: 2\n     *      }],\n     *      score: 2,\n     *      maxScore: 2\n     *  };\n     *  const component = reviewPanelFactory(container, config, testMap)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.headerLabel] - Header label\n     * @param {String} [config.footerLabel] - Footer label\n     * @param {Boolean} [config.showScore] - Show the score on the review panel. When disabled, the filters will also be.\n     * @param {reviewPanelFilter[]} [config.filters] - The list of available filters\n     * @param {testMap|null} map\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     * @fires update When the navigation panel has been updated\n     * @fires collapse When a block element is collapsed\n     * @fires expand When a block element is expanded\n     * @fires active When an element is activated\n     * @fires filterchange When the active filter has changed\n     * @fires datachange When the panel data has changed\n     * @fires itemchange When an item is selected by the user (either a click on item or a filter)\n     */\n    function accordionReviewPanelFactory(container, config = {}, map = null) {\n        let component;\n        let controls = null;\n        let activeFilter = null;\n        let activeItem = null;\n        let data = null;\n\n        /**\n         * Selects the active filter\n         * @param {String} filterId\n         */\n        const selectFilter = filterId => {\n            controls.$filters\n                .removeClass(cssClasses.active)\n                .filter(`[data-control=\"${filterId}\"]`)\n                .addClass(cssClasses.active);\n        };\n\n        /**\n         * Selects the active item\n         * @param {String} itemId\n         */\n        const selectItem = itemId => {\n            // first deactivate already active elements\n            controls.$content\n                .find(cssSelectors.active)\n                .removeClass(cssClasses.active);\n\n            // then find the chain of elements to activate\n            const $target = findControl(controls.$content, itemId);\n            if ($target.length) {\n                const $parents = $target.parentsUntil(controls.$content, cssSelectors.control);\n                $target\n                    .add($parents)\n                    .addClass(cssClasses.active);\n\n                // finally make sure the item is visible\n                autoscroll($target, controls.$content);\n            }\n        };\n\n        /**\n         * Apply a callback on each navigable element\n         * @param callback\n         */\n        const eachNavigable = callback => {\n            component.getElement()\n                .find(cssSelectors.navigable)\n                .each(callback);\n        };\n\n        /**\n         * Enables the keyboard navigation using 'tab' keys\n         */\n        const enableKeyboard = () => eachNavigable((index, el) => el.setAttribute('tabindex', 0));\n\n        /**\n         * Disables the keyboard navigation using 'tab' keys\n         */\n        const disableKeyboard = () => eachNavigable((index, el) => el.setAttribute('tabindex', -1));\n\n        /**\n         * Emits the itemchange event with respect to the current active item\n         */\n        const itemChange = () => {\n            /**\n             * @event itemchange\n             * @param {String} itemId\n             * @param {Number} position\n             */\n            component.trigger('itemchange', activeItem.id, activeItem.position);\n        };\n\n        /**\n         * Defines the reviewPanel API\n         * @type {reviewPanel}\n         */\n        const api = {\n            /**\n             * Gets the panel data\n             * @returns {reviewPanelMap}\n             */\n            getData() {\n                return data;\n            },\n\n            /**\n             * Sets the panel data\n             * @param {testMap} newMap\n             * @returns {reviewPanel}\n             * @fires datachange\n             */\n            setData(newMap) {\n                data = reviewDataHelper.getReviewPanelMap(newMap, this.getConfig().showScore, false);\n\n                /**\n                 * @event datachange\n                 * @param {reviewPanelMap} data\n                 */\n                this.trigger('datachange', data);\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active filter\n             * @returns {String|null}\n             */\n            getActiveFilter() {\n                return activeFilter && activeFilter.id;\n            },\n\n            /**\n             * Sets the active filter\n             * @param {String} filterId\n             * @returns {reviewPanel}\n             */\n            setActiveFilter(filterId) {\n                const {filters} = this.getConfig();\n                if (Array.isArray(filters)) {\n                    const foundFilter = filters.find(filter => filter.id === filterId);\n                    if (foundFilter && (!activeFilter || activeFilter.id !== filterId)) {\n                        activeFilter = foundFilter;\n\n                        if (this.is('rendered')) {\n                            selectFilter(filterId);\n                        }\n\n                        /**\n                         * @event filterchange\n                         * @param {String} filterId\n                         */\n                        this.trigger('filterchange', filterId);\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active item\n             * @returns {String|null}\n             */\n            getActiveItem() {\n                return activeItem && activeItem.id;\n            },\n\n            /**\n             * Gets the position of the active item\n             * @returns {Number|null}\n             */\n            getActiveItemPosition() {\n                return activeItem && activeItem.position;\n            },\n\n            /**\n             * Sets the active item\n             * @param {String} itemId\n             * @returns {reviewPanel}\n             * @fires active for each activated element\n             */\n            setActiveItem(itemId) {\n                if (data && data.items.has(itemId) && (!activeItem || activeItem.id !== itemId)) {\n                    activeItem = data.items.get(itemId);\n\n                    if (this.is('rendered')) {\n                        selectItem(itemId);\n                    }\n\n                    /**\n                     * @event active\n                     * @param {String} itemId\n                     */\n                    this.trigger('active', itemId);\n                }\n                return this;\n            },\n\n            /**\n             * Expands all the blocks from the given identifier and above\n             * @param {String} id\n             * @returns {reviewPanel}\n             * @fires expand for each expanded block\n             */\n            expand(id) {\n                if (this.is('rendered')) {\n                    const $target = findControl(controls.$content, id);\n\n                    if ($target.length) {\n                        // will expand the target, its parents and first child blocks\n                        let $collapsed = $target.parentsUntil(controls.$content, cssSelectors.collapsible)\n                            .add($target.find(cssSelectors.collapsible).filter(':first-child'));\n\n                        if ($target.is(cssSelectors.collapsible)) {\n                            $collapsed = $collapsed.add($target);\n                        }\n\n                        if ($collapsed.filter(cssSelectors.expanded).length !== $collapsed.length) {\n                            // first, collapse all expanded blocks\n                            this.collapse();\n\n                            // then expand the blocks\n                            $collapsed.each((index, el) => {\n                                el.classList.add(cssClasses.expanded);\n\n                                /**\n                                 * @event expand\n                                 * @param {String} id - the identifier of the expanded element\n                                 */\n                                this.trigger('expand', el.dataset.control);\n                            });\n\n                        }\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Collapse all the blocks from the given identifier and below\n             * @param {String|null} [id] - The identifier og the block to collapse. If none, all blocks will be targeted.\n             * @returns {reviewPanel}\n             * @fires collapse for each collapsed block\n             */\n            collapse(id = null) {\n                if (this.is('rendered')) {\n                    let $expanded = null;\n\n                    // select the elements to collapse\n                    if (id) {\n                        // only the expanded elements that belong to the provided identifier\n                        const $target = findControl(controls.$content, id);\n                        $expanded = findExpanded($target);\n                        if ($target.is(cssSelectors.expanded)) {\n                            $expanded = $expanded.add($target);\n                        }\n                    } else {\n                        // all expanded elements\n                        $expanded = findExpanded(controls.$content);\n                    }\n\n                    // apply the collapse\n                    $expanded.each((index, el) => {\n                        el.classList.remove(cssClasses.expanded);\n\n                        /**\n                         * @event collapse\n                         * @param {String} id - the identifier of the collapsed element\n                         */\n                        this.trigger('collapse', el.dataset.control);\n                    });\n                }\n\n                return this;\n            },\n\n            /**\n             * Expands or collapse the blocks related to the given identifier\n             * @param {String} id\n             * @returns {reviewPanel}\n             * @fires expand for each expanded block\n             * @fires collapse for each collapsed block\n             */\n            toggle(id) {\n                if (this.is('rendered')) {\n                    const $target = findControl(controls.$content, id);\n                    if ($target.length) {\n                        if ($target.is(cssSelectors.expanded)) {\n                            this.collapse(id);\n                        } else {\n                            this.expand(id);\n                        }\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Update the displayed list\n             * @returns {reviewPanel}\n             * @fires update once the display has been updated\n             */\n            update() {\n                if (data && this.is('rendered')) {\n                    let scorePercent, scoreText;\n\n                    if (data.maxScore) {\n                        scoreText = `${data.score}/${data.maxScore}`;\n                        scorePercent = `${Math.floor(100 * data.score / data.maxScore) || 0}%`;\n                    } else {\n                        scoreText = `${data.score}`;\n                        scorePercent = '0%';\n                    }\n\n                    controls.$content.html(listTpl(data));\n                    controls.$headerScore.text(scorePercent);\n                    controls.$footerScore.text(scoreText);\n                    hider.toggle(controls.$filters, data.score !== data.maxScore);\n\n                    if (!this.is('disabled')) {\n                        enableKeyboard();\n                    }\n\n                    /**\n                     * @event update\n                     * @param {reviewPanelMap} data\n                     */\n                    this.trigger('update', data);\n                }\n\n                return this;\n            }\n        };\n\n        /**\n         * @typedef {component} reviewPanel\n         */\n        component = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(panelTpl)\n\n            // auto render on init\n            .on('init', function onReviewPanelInit() {\n                const initConfig = this.getConfig();\n\n                // no header nor footer or filters when scores are disabled\n                if (!initConfig.showScore) {\n                    initConfig.headerLabel = false;\n                    initConfig.footerLabel = false;\n                    initConfig.filters = false;\n                }\n\n                const {headerLabel, footerLabel, filters} = initConfig;\n\n                // setup the header\n                if (headerLabel) {\n                    initConfig.header = {\n                        label: headerLabel,\n                        score: '0%'\n                    };\n                }\n\n                // setup the footer\n                if (footerLabel) {\n                    initConfig.footer = {\n                        label: footerLabel,\n                        score: '0'\n                    };\n                }\n\n                // select the first filter if none is active\n                if (!activeFilter && Array.isArray(filters)) {\n                    activeFilter = filters.find(filter => filter.label);\n                }\n\n                // initialize the test map if supplied\n                if (map) {\n                    component.setData(map);\n                }\n\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onReviewPanelRender() {\n                controls = {\n                    $headerScore: this.getElement().find(`${cssSelectors.header} ${cssSelectors.score}`),\n                    $footerScore: this.getElement().find(`${cssSelectors.footer} ${cssSelectors.score}`),\n                    $filtersContainer: this.getElement().find(cssSelectors.filtersContainer),\n                    $filters: this.getElement().find(cssSelectors.filter),\n                    $content: this.getElement().find(cssSelectors.content),\n                };\n\n                this.getElement().on('keydown', cssSelectors.navigable, e => {\n                    if(e.key === ' ' || e.key === 'Enter') {\n                        e.preventDefault();\n                        e.currentTarget.click();\n                    }\n                });\n\n                // change filter on click\n                controls.$filtersContainer.on('click', cssSelectors.filter, e => {\n                    if (!this.is('disabled')) {\n                        this.setActiveFilter(e.currentTarget.dataset.control);\n                    }\n                });\n\n                // expand/collapse blocks on click\n                controls.$content.on('click', cssSelectors.collapsibleLabel, e => {\n                    if (!this.is('disabled')) {\n                        this.toggle(e.currentTarget.parentElement.dataset.control);\n                    }\n                });\n\n                // select item\n                controls.$content.on('click', cssSelectors.item, e => {\n                    if (!this.is('disabled')) {\n                        const currentId = activeItem && activeItem.id;\n                        this.setActiveItem(e.currentTarget.dataset.control);\n                        if (activeItem && activeItem.id !== currentId) {\n                            itemChange();\n                        }\n                    }\n                });\n\n                this.update();\n\n                if (activeFilter) {\n                    selectFilter(activeFilter.id);\n                }\n\n                if (activeItem) {\n                    selectItem(activeItem.id);\n                    this.expand(activeItem.id);\n                }\n\n                /**\n                 * @event ready\n                 */\n                this.setState('show-score', this.getConfig().showScore)\n                    .setState('ready', true)\n                    .trigger('ready');\n            })\n\n            // reflect enable/disabled state\n            .on('enable', () => enableKeyboard)\n            .on('disable', () => disableKeyboard)\n\n            // auto expand the block that contains the active item\n            .on('active', function onReviewPanelActiveItem(itemId) {\n                this.expand(itemId);\n            })\n\n            // make sure the active item remain selected and visible when updating the display\n            .on('update', function onReviewPanelUpdate() {\n                if (activeItem) {\n                    // if the active item is not available anymore, select the first available one\n                    if (!data.items.has(activeItem.id)) {\n                        controls.$content.find(`${cssSelectors.item}:nth(0)`).click();\n                    } else {\n                        selectItem(activeItem.id);\n                        this.expand(activeItem.id);\n                    }\n                }\n            })\n\n            // data update\n            .on('datachange', function onReviewPanelDataChange() {\n                this.update();\n            })\n\n            // free resources on dispose\n            .on('destroy', function onReviewPanelDestroy() {\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => component.init(config));\n\n        return component;\n    }\n\n    return accordionReviewPanelFactory;\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/fizzyPanel', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            <div class=\\\"review-panel-score-header\\\">\\n            \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </div>\\n        \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                <span class=\\\"review-panel-score\\\">\";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <footer class=\\\"review-panel-footer\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </footer>\\n\";\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <span class=\\\"review-panel-score\\\">\";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"review-panel fizzy\\\">\\n    <header class=\\\"review-panel-header\\\">\\n        <div class=\\\"review-panel-title\\\">\";\n  if (helper = helpers.headerTitle) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.headerTitle); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </header>\\n    <nav class=\\\"review-panel-content\\\"></nav>\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  }); });\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/fizzyList', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data,depth1) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <li class=\\\"review-panel-section\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth1 && depth1.displaySectionTitles), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        <div class=\\\"review-panel-items\\\"></div>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <span class=\\\"review-panel-label\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"review-panel-text\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n            </span>\\n        \";\n  return buffer;\n  }\n\n  buffer += \"<ol class=\\\"review-panel-sections\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.programWithDepth(1, program1, data, depth0),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ol>\";\n  return buffer;\n  }); });\n","\ndefine('css!ltiTestReview/review/plugins/navigation/review-panel/css/fizzy-panel',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021-2022 Open Assessment Technologies SA ;\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/fizzyPanel',[\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/itemButtonList',\n    'ltiTestReview/review/plugins/navigation/review-panel/panel-data',\n    'tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/fizzyPanel',\n    'tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/fizzyList',\n    'css!ltiTestReview/review/plugins/navigation/review-panel/css/fizzy-panel.css'\n], function (\n    _,\n    __,\n    componentFactory,\n    itemButtonListFactory,\n    reviewDataHelper,\n    panelTpl,\n    listTpl\n) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    const defaults = {\n        headerTitle: __('Test review'),\n        headerLabel: __('Total score:'),\n        footerLabel: __('Total'),\n        showScore: false,\n        showCorrect: false\n    };\n\n    /**\n     * CSS selectors that match some particular elements\n     * @type {Object}\n     */\n    const cssSelectors = {\n        //item-buttonlist\n        navigable: '.item-buttonlist-btn',\n        //panel\n        content: '.review-panel-content',\n        header: '.review-panel-header',\n        footer: '.review-panel-footer',\n        score: '.review-panel-score',\n        itemButtonListContainer: '.review-panel-items'\n    };\n\n    /**\n     * Builds a review panel, that will show the test data with score.\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      // ...\n     *  };\n     *  const testMap = {\n     *      parts: [{\n     *          id: 'part-1',\n     *          label: 'Part 1',\n     *          sections: [{\n     *              id: 'section-1',\n     *              label: 'Section 1',\n     *              items: [{\n     *                  id: 'item-1',\n     *                  label: 'Item 1',\n     *                  position: 0,\n     *                  score: 2,\n     *                  maxScore: 2\n     *              }],\n     *              score: 2,\n     *              maxScore: 2\n     *          }],\n     *          score: 2,\n     *          maxScore: 2\n     *      }],\n     *      score: 2,\n     *      maxScore: 2\n     *  };\n     *  const component = reviewPanelFactory(container, config, testMap)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.headerLabel] - Header label\n     * @param {String} [config.footerLabel] - Footer label\n     * @param {Boolean} [config.showScore] - Show the score header/footers in the review panel\n     * @param {Boolean} [config.showCorrect] - Show correct/incorrect badges on item buttons\n     * @param {Boolean} [config.displaySectionTitles] - Show section titles\n     * @param {testMap|null} testMap\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     * @fires update When the navigation panel has been updated\n     * @fires active When an element is activated\n     * @fires datachange When the panel data has changed\n     * @fires itemchange When an item is selected by the user (either a click on item or a filter)\n     */\n    function fizzyReviewPanelFactory(container, config = {}, testMap = null) {\n        let component;\n        let itemButtonListComponents = [];\n        let controls = null;\n        let activeItem = null;\n        let data = null;\n\n        /**\n         * Selects the active item\n         * @param {String} itemId\n         */\n        const selectItem = itemId => {\n            itemButtonListComponents.forEach(c => c.setActiveItem(itemId));\n        };\n\n        /**\n         * Emits the itemchange event with respect to the current active item\n         */\n        const itemChange = () => {\n            /**\n             * @event itemchange\n             * @param {String} itemId\n             * @param {Number} position\n             */\n            component.trigger('itemchange', activeItem.id, activeItem.position);\n        };\n\n        const onItemClick = (e) => {\n            if (!component.is('disabled')) {\n                const currentId = component.getActiveItem();\n                component.setActiveItem(e.id);\n                if (component.getActiveItem() !== currentId) {\n                    itemChange();\n                }\n            }\n        };\n\n        //at the moment this component doesn't support data update, so just recreate it if testMap has changed\n        const renderItemButtonListComponents = () => {\n            itemButtonListComponents.forEach(c => c.destroy());\n            itemButtonListComponents = [];\n\n            if (component.is('rendered')) {\n                controls.$content.find(cssSelectors.itemButtonListContainer).each((index, itemButtonListContainerElem) => {\n                    let items = data.sections[index].items;\n                    if (!config.displayItemTooltip) {\n                        items = items.map(item => {\n                            const itemData = _.clone(item);\n                            delete itemData.title;\n                            return itemData;\n                        });\n                    }\n                    const itemButtonListComponent = itemButtonListFactory({ items })\n                        .render(itemButtonListContainerElem)\n                        .on('click', onItemClick);\n                    itemButtonListComponents.push(itemButtonListComponent);\n                });\n            }\n        };\n\n        /**\n         * Defines the reviewPanel API\n         * @type {reviewPanel}\n         */\n        const api = {\n            /**\n             * Gets the panel data\n             * @returns {reviewPanelMap}\n             */\n            getData() {\n                return data;\n            },\n\n            /**\n             * Sets the panel data\n             * @param {testMap} newMap\n             * @returns {reviewPanel}\n             * @fires datachange\n             */\n            setData(newMap) {\n                const { showScore, displaySectionTitles } = this.getConfig();\n\n                // Modify the testMap items, adding properties for the fizzy display\n                data = reviewDataHelper.getReviewPanelMap(newMap, showScore);\n                data.displaySectionTitles = displaySectionTitles;\n                // unpack Map\n                data.sections = Array.from(data.sections.values());\n\n                /**\n                 * @event datachange\n                 * @param {reviewPanelMap} data\n                 */\n                this.trigger('datachange', data);\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active item\n             * @returns {String|null}\n             */\n            getActiveItem() {\n                return activeItem && activeItem.id;\n            },\n\n            /**\n             * Sets the active item\n             * @param {String} itemId\n             * @returns {reviewPanel}\n             * @fires active for each activated element\n             */\n            setActiveItem(itemId) {\n                if (data && data.items.has(itemId) && (!activeItem || activeItem.id !== itemId)) {\n                    activeItem = data.items.get(itemId);\n\n                    if (this.is('rendered')) {\n                        selectItem(itemId);\n                    }\n\n                    /**\n                     * @event active\n                     * @param {String} itemId\n                     */\n                    this.trigger('active', itemId);\n                }\n                return this;\n            },\n\n            /**\n             * Update the displayed list\n             * @returns {reviewPanel}\n             * @fires update once the display has been updated\n             */\n            update() {\n                if (data && this.is('rendered')) {\n                    let scorePercent, scoreText;\n\n                    if (data.maxScore) {\n                        scoreText = `${data.score}/${data.maxScore}`;\n                        scorePercent = `${Math.floor(100 * data.score / data.maxScore) || 0}%`;\n                    } else {\n                        scoreText = `${data.score}`;\n                        scorePercent = '0%';\n                    }\n\n                    controls.$headerScore.text(scorePercent);\n                    controls.$footerScore.text(scoreText);\n\n                    controls.$content.html(listTpl(data));\n\n                    renderItemButtonListComponents();\n\n                    /**\n                     * @event update\n                     * @param {reviewPanelMap} data\n                     */\n                    this.trigger('update', data);\n                }\n\n                return this;\n            }\n        };\n\n        /**\n         * @typedef {component} reviewPanel\n         */\n        component = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(panelTpl)\n\n            // auto render on init\n            .on('init', function onReviewPanelInit() {\n                const initConfig = this.getConfig();\n\n                // no header nor footer when scores are disabled\n                if (!initConfig.showScore) {\n                    initConfig.headerLabel = false;\n                    initConfig.footerLabel = false;\n                }\n\n                const { headerLabel, footerLabel } = initConfig;\n\n                // setup the header\n                if (headerLabel) {\n                    initConfig.header = {\n                        label: headerLabel,\n                        score: '0%'\n                    };\n                }\n\n                // setup the footer\n                if (footerLabel) {\n                    initConfig.footer = {\n                        label: footerLabel,\n                        score: '0'\n                    };\n                }\n\n                // initialize the test map if supplied\n                if (testMap) {\n                    component.setData(testMap);\n                }\n\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onReviewPanelRender() {\n                controls = {\n                    $headerScore: this.getElement().find(`${cssSelectors.header} ${cssSelectors.score}`),\n                    $footerScore: this.getElement().find(`${cssSelectors.footer} ${cssSelectors.score}`),\n                    $content: this.getElement().find(cssSelectors.content),\n                };\n\n                this.update();\n\n                if (activeItem) {\n                    selectItem(activeItem.id);\n                }\n\n                controls.$content.on('click', cssSelectors.navigable, e => {\n                    onItemClick({ id: e.currentTarget.dataset.id });\n                });\n\n                /**\n                 * @event ready\n                 */\n                // is show-score state useful?\n                this.setState('show-score', this.getConfig().showScore)\n                    .setState('ready', true)\n                    .trigger('ready');\n            })\n\n            // reflect enabled/disabled panel state in buttons\n            .on('enable', () => {\n                itemButtonListComponents.forEach(c => c.enable());\n            })\n            .on('disable', () => {\n                itemButtonListComponents.forEach(c => c.disable());\n            })\n\n            // make sure the active item remain selected and visible when updating the display\n            .on('update', function onReviewPanelUpdate() {\n                if (activeItem) {\n                    // if the active item is not available anymore, select the first available one [usecase is only filters?]\n                    if (!data.items.has(activeItem.id) && data.items.size > 0) {\n                        onItemClick({ id: data.sections[0].items[0].id });\n                    } else {\n                        selectItem(activeItem.id);\n                    }\n                }\n            })\n\n            // data update\n            .on('datachange', function onReviewPanelDataChange() {\n                this.update();\n            })\n\n            // free resources on dispose\n            .on('destroy', function onReviewPanelDestroy() {\n                itemButtonListComponents.forEach(c => c.destroy());\n                itemButtonListComponents = [];\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => component.init(config));\n\n        return component;\n    }\n\n    return fizzyReviewPanelFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * Service managing the test map, allowing to filter it and listen to change/filter events\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/services/navigation-data',[\n    'lodash',\n    'core/eventifier',\n    'taoQtiTest/runner/helpers/map'\n], function (_, eventifier, mapHelper) {\n    'use strict';\n\n    /**\n     * @typedef {Object} scoredEntry\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * @typedef {scoredEntry} mapEntry\n     * @property {String} id - The element identifier\n     * @property {String} label - The displayed label\n     * @property {Number} position - The position of the item within the test\n     * @property {Boolean} [informational] - If the item is informational\n     * @property {Boolean} [skipped] - If the item has been skipped\n     */\n\n    /**\n     * Makes sure the score is computed on a collection\n     * @param {Object|Array} collection\n     * @param {String} property\n     * @returns {scoredEntry}\n     */\n    const computeScore = (collection, property) => {\n        let score = 0;\n        let maxScore = 0;\n        return {\n            [property]: _.mapValues(collection, item => {\n                item.score = item.score || 0;\n                item.maxScore = item.maxScore || 0;\n\n                score += item.score;\n                maxScore += item.maxScore;\n\n                return item;\n            }),\n            score,\n            maxScore\n        };\n    };\n\n    /**\n     * Manages the test map in order to allow to filter it.\n     * Refines the test map to provide the dataset expected by the review panel\n     *\n     * @example\n     *  // initialize with a test map\n     *  const navigationDataService = navigationDataServiceFactory(testMap);\n     *\n     *  // the service can also be created empty\n     *  const navigationDataService = navigationDataServiceFactory();\n     *  // and a test map set later\n     *  navigationDataService.setMap(testMap);\n     *\n     *  // changes on test map can be listened\n     *  navigationDataService.on('mapchange', testMap => {}); // test map rewritten\n     *  navigationDataService.on('mapfilter', testMap => {}); // test map filtered\n     *\n     *  // get the stored test map\n     *  const map = navigationDataService.getMap();\n     *\n     *  // filter the map by informational items\n     *  navigationDataService.filterMap(item => item.informational);\n     *\n     *  // get the current filtered test map\n     *  const filteredMap = navigationDataService.getFilteredMap();\n     *\n     * @param {testMap} testMap\n     * @returns {navigationDataService}\n     * @fires mapchange each time the testMap is changed\n     * @fires mapfilter each time the testMap is filtered\n     */\n    function navigationDataServiceFactory(testMap = {}) {\n        let filteredTestMap;\n\n        /**\n         * @typedef {Object} navigationDataService\n         */\n        const navigationDataService = {\n            /**\n             * Gets the test map\n             * @returns {testMap}\n             */\n            getMap() {\n                return testMap;\n            },\n\n            /**\n             * Gets the filtered test map\n             * @returns {testMap}\n             */\n            getFilteredMap() {\n                return filteredTestMap;\n            },\n\n            /**\n             * Sets the former test map\n             * @param {testMap} map\n             * @returns {navigationDataService}\n             * @fires mapchange once the test map has been stored\n             */\n            setMap(map) {\n                testMap = this.computeMap(map);\n\n                /**\n                 * @event mapchange\n                 * @param {testMap} testMap\n                 */\n                this.trigger('mapchange', testMap);\n\n                this.filterMap();\n\n                return this;\n            },\n\n            /**\n             * Filters the former map by the provider filter callback.\n             * Any item for which the filter returns true will be kept.\n             * Empty sections and empty parts will be discarded.\n             * @param {Function} filter - A filter callback that should return truey to keep the passed on item,\n             *                            or should return falsey to reject it.\n             * @returns {navigationDataService}\n             * @throws TypeError when the filter is not a function\n             * @fires mapfilter once the test map has been filtered\n             */\n            filterMap(filter = () => true) {\n                if (!_.isFunction(filter)) {\n                    throw new TypeError('A filter must be a function!');\n                }\n\n                // filter the test map, only keeping the items that pass the filter callback\n                filteredTestMap = Object.assign({}, testMap, {\n                    parts: _.reduce(testMap.parts, (parts, part, partId) => {\n                        part = Object.assign({}, part, {\n                            sections: _.reduce(part.sections, (sections, section, sectionId) => {\n                                section = Object.assign({}, section, {\n                                    items: _.pick(section.items, filter)\n                                });\n\n                                if (_.size(section.items)) {\n                                    sections[sectionId] = section;\n                                }\n\n                                return sections;\n                            }, {})\n                        });\n\n                        if (_.size(part.sections)) {\n                            parts[partId] = part;\n                        }\n\n                        return parts;\n                    }, {})\n                });\n\n                // make sure the jumps table is set accordingly\n                mapHelper.createJumpTable(filteredTestMap);\n\n                // fix the jumps table, filling the gaps by empty objects\n                const jumps = mapHelper.getJumps(filteredTestMap);\n                _.times(jumps.length, index => jumps[index] = jumps[index] || {});\n\n                /**\n                 * @event mapfilter\n                 * @param {testMap} filteredTestMap\n                 */\n                this.trigger('mapfilter', filteredTestMap);\n\n                return this;\n            },\n\n            /**\n             * Computes some properties in the test map, like the score.\n             * @param {testMap} map\n             * @returns {testMap}\n             */\n            computeMap(map = {}) {\n                // rebuild the map computing the score\n                return Object.assign({}, map,\n                    computeScore(_.mapValues(map.parts || {}, part => Object.assign({}, part,\n                        computeScore(_.mapValues(part.sections || {}, section => Object.assign({}, section,\n                            computeScore(section.items || {}, 'items')\n                        )), 'sections')\n                    )), 'parts')\n                );\n            }\n        };\n\n        // we need to observe the service\n        eventifier(navigationDataService);\n\n        // initial test map must be set if any\n        if (testMap) {\n            navigationDataService.setMap(testMap);\n        }\n\n        return navigationDataService;\n    }\n\n    return navigationDataServiceFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019-2022 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/plugin',[\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'ltiTestReview/review/services/navigation-data',\n    'ltiTestReview/review/plugins/navigation/review-panel/accordionPanel',\n    'ltiTestReview/review/plugins/navigation/review-panel/fizzyPanel'\n], function (\n    promiseTimeout,\n    pluginFactory,\n    navigationDataServiceFactory,\n    accordionReviewPanelFactory,\n    fizzyReviewPanelFactory\n) {\n    'use strict';\n\n    /**\n     * @param {mapEntry} item\n     * @returns {String}\n     */\n    const getItemTypeForFilter = item => {\n        if (item.informational) {\n            return 'info';\n        }\n        if (item.isExternallyScored && item.pendingExternalScore) {\n            return 'score-pending';\n        }\n        if (item.maxScore && item.score > 0 && item.score === item.maxScore) {\n            return 'correct';\n        }\n        if (item.maxScore && item.score === 0) {\n            return 'incorrect';\n        }\n        if (item.maxScore && item.score > 0 && item.score < item.maxScore) {\n            return 'score-partial';\n        }\n        return 'no-score';\n    };\n\n    const filters = {\n        /**\n         * No filter, keep all items\n         * @returns {Boolean}\n         */\n        all() {\n            return true;\n        },\n\n        /**\n         * Filter for incorrect items\n         * @param {mapEntry} item\n         * @returns {Boolean}\n         */\n        incorrect(item) {\n            const itemType = getItemTypeForFilter(item);\n            return ['incorrect', 'score-partial'].includes(itemType);\n        }\n    };\n\n    /**\n     * Test Review Plugin : Review Panel\n     * Displays a navigation panel allowing to see the whole test structure and give access to each element\n     */\n    return pluginFactory({\n        name: 'review-panel',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            this.getTestRunner()\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable());\n        },\n\n        /**\n         * Called during the runner's render phase\n         * @returns {Promise}\n         */\n        render() {\n            return promiseTimeout(\n                new Promise(resolve => {\n                    const testRunner = this.getTestRunner();\n                    const navigationDataService = navigationDataServiceFactory(testRunner.getTestMap());\n\n                    const { showScore, showCorrect, displaySectionTitles, reviewLayout, displayItemTooltip } =\n                        testRunner.getOptions();\n\n                    const reviewPanelFactory =\n                        reviewLayout === 'fizzy' ? fizzyReviewPanelFactory : accordionReviewPanelFactory;\n\n                    const reviewPanelConfig = Object.assign(\n                        {\n                            showScore,\n                            showCorrect,\n                            displaySectionTitles,\n                            displayItemTooltip\n                        },\n                        this.getConfig()\n                    );\n\n                    const reviewPanel = reviewPanelFactory(\n                        this.getAreaBroker().getPanelArea(),\n                        reviewPanelConfig,\n                        navigationDataService.getMap()\n                    );\n\n                    // control the test runner from the review panel\n                    reviewPanel\n                        .on('filterchange', filterId => navigationDataService.filterMap(filters[filterId]))\n                        .on('itemchange', (itemRef, position) => testRunner.jump(position, 'item'))\n                        .on('ready', resolve);\n\n                    // reflect the filter to the map\n                    navigationDataService.on('mapfilter', filteredMap => testRunner.setTestMap(filteredMap));\n\n                    // reflect the test runner state to the review panel\n                    testRunner\n                        .on('testmapchange', testMap => reviewPanel.setData(testMap))\n                        .on('loaditem', itemRef => reviewPanel.setActiveItem(itemRef))\n                        .on(`plugin-show.${this.getName()}`, () => reviewPanel.show())\n                        .on(`plugin-hide.${this.getName()}`, () => reviewPanel.hide())\n                        .on(`plugin-enable.${this.getName()}`, () => reviewPanel.enable())\n                        .on(`plugin-disable.${this.getName()}`, () => reviewPanel.disable())\n                        .on('destroy', () => reviewPanel.destroy());\n                })\n            );\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n\n/**\n * Extends the navigator service supplied by the QTI test runner,\n * supporting filtered jumps tables (created after test map filtering).\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/services/navigator',[\n    'lodash',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/testContextBuilder',\n    'taoQtiTest/runner/navigator/navigator'\n], function (_, mapHelper, testContextBuilder, runnerNavigatorFactory) {\n\n    /**\n     * Gives you a navigator\n     * @param {Object} testContext\n     * @param {Object} testMap\n     * @returns {Object} the navigator\n     * @throws {TypeError} if the given parameters aren't objects\n     */\n    function navigatorFactory(testContext, testMap) {\n        const navigator = runnerNavigatorFactory(testContext, testMap);\n\n        // extends the default navigator, taking care of corrupted jumps table\n        return Object.assign({}, navigator, {\n            /**\n             * Navigate to the next item\n             * @returns {testContext|Boolean} the new test context\n             */\n            nextItem() {\n                const next = _.find(mapHelper.getJumps(testMap), jump => jump && jump.position > testContext.itemPosition);\n                if (next) {\n                    return testContextBuilder.buildTestContextFromPosition(testContext, testMap, next.position);\n                }\n\n                return false;\n            },\n\n            /**\n             * Navigate to the next item\n             * @returns {testContext|Boolean} the new test context\n             */\n            previousItem() {\n                const prev = _.findLast(mapHelper.getJumps(testMap), jump => jump && jump.position < testContext.itemPosition);\n                if (prev) {\n                    return testContextBuilder.buildTestContextFromPosition(testContext, testMap, prev.position);\n                }\n\n                return false;\n            },\n\n            /**\n             * Navigate to the next item\n             * @returns {testContext|Boolean} the new test context\n             */\n            nextSection() {\n                const sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n                const section = mapHelper.getSection(testMap, testContext.sectionId);\n                const itemPosition = section.position + sectionStats.total;\n                const next = _.find(mapHelper.getJumps(testMap), jump => jump && jump.position >= itemPosition);\n                if (next) {\n                    return testContextBuilder.buildTestContextFromPosition(testContext, testMap, next.position);\n                }\n\n                return false;\n            }\n        });\n    }\n\n    return navigatorFactory;\n});\n\n","\ndefine('tpl!ltiTestReview/review/provider/tpl/qtiTestReviewProvider', ['handlebars'], function(hb){ return hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<main class=\\\"test-review-scope\\\">\\n    <div class=\\\"jumplinks\\\">\\n        <a class=\\\"jumplink navigationlink\\\" href=\\\"#\\\" data-area=\\\"sidebar\\\" tabindex=\\\"1\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n    + \" <b>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \"</b></a>\\n        <a class=\\\"jumplink answerlink\\\" href=\\\"#\\\" data-area=\\\"contentWrapper\\\" tabindex=\\\"1\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n    + \" <b>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Question\", options) : helperMissing.call(depth0, \"__\", \"Question\", options)))\n    + \"</b></a>\\n    </div>\\n    <div class=\\\"action-bar content-action-bar horizontal-action-bar top-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"test-runner-sections\\\">\\n\\n        <aside class=\\\"test-sidebar test-sidebar-left\\\">\\n            <div class=\\\"panel-box\\\"></div>\\n            <div class=\\\"navi-box\\\"></div>\\n        </aside>\\n\\n        <section class=\\\"content-wrapper\\\">\\n            <div class=\\\"item-tool\\\"></div>\\n            <div class=\\\"item-content\\\">\\n                <div id=\\\"qti-content\\\"></div>\\n            </div>\\n        </section>\\n    </div>\\n\\n    <nav class=\\\"action-bar content-action-bar horizontal-action-bar bottom-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </nav>\\n</main>\";\n  return buffer;\n  }); });\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner provider for the QTI test previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/provider/qtiTestReviewProvider',[\n    'jquery',\n    'lodash',\n    'taoTests/runner/areaBroker',\n    'taoTests/runner/proxy',\n    'taoTests/runner/testStore',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/ui/toolbox/toolbox',\n    'taoQtiItem/runner/qtiItemRunner',\n    'taoQtiTest/runner/config/assetManager',\n    'taoQtiTest/runner/services/sequenceStore',\n    'ltiTestReview/review/services/navigator',\n    'tpl!ltiTestReview/review/provider/tpl/qtiTestReviewProvider'\n], function (\n    $,\n    _,\n    areaBrokerFactory,\n    proxyFactory,\n    testStoreFactory,\n    mapHelper,\n    toolboxFactory,\n    qtiItemRunner,\n    assetManagerFactory,\n    sequenceStoreService,\n    testNavigatorFactory,\n    layoutTpl\n) {\n    'use strict';\n\n    const { getSequenceNumber, getSequenceStore } = sequenceStoreService;\n\n    /**\n     * A Test runner provider to be registered against the runner\n     */\n    return {\n        //provider name\n        name: 'qtiTestReviewProvider',\n\n        /**\n         * Initialize and load the test store\n         * @returns {testStore}\n         */\n        loadTestStore() {\n            const config = this.getConfig();\n\n            //the test run needs to be identified uniquely\n            const identifier = config.serviceCallId || `test-${Date.now()}`;\n            return testStoreFactory(identifier);\n        },\n\n        /**\n         * Installation of the provider, called during test runner init phase.\n         */\n        install() {\n            // eventify the test map update\n            const defaultSetTestMap = this.setTestMap;\n            this.setTestMap = (...args) => {\n                const result = defaultSetTestMap.apply(this, args);\n\n                /**\n                 * @event testmapchange\n                 * @param {testMap} testMap\n                 */\n                this.trigger('testmapchange', this.getTestMap());\n\n                return result;\n            };\n\n            const { plugins } = this.getConfig().options || {};\n            if (plugins) {\n                _.forEach(this.getPlugins(), plugin => {\n                    if (_.isPlainObject(plugin) && _.isFunction(plugin.setConfig)) {\n                        const config = plugins[plugin.getName()];\n                        if (_.isPlainObject(config)) {\n                            plugin.setConfig(config);\n                        }\n                    }\n                });\n            }\n        },\n\n        /**\n         * Initialize and load the area broker with a correct mapping\n         * @returns {areaBroker}\n         */\n        loadAreaBroker() {\n            const $layout = $(layoutTpl());\n\n            return areaBrokerFactory($layout, {\n                contentWrapper: $('.content-wrapper', $layout),\n                itemTool: $('.item-tool', $layout),\n                content: $('#qti-content', $layout),\n                toolbox: $('.bottom-action-bar .tools-box', $layout),\n                navigation: $('.test-sidebar-left .navi-box', $layout),\n                control: $('.top-action-bar .control-box', $layout),\n                actionsBar: $('.bottom-action-bar .control-box', $layout),\n                panel: $('.test-sidebar-left .panel-box', $layout),\n                header: $('.top-action-bar .tools-box', $layout),\n                context: $('.top-action-bar .navi-box-list', $layout),\n                sidebar: $('.test-sidebar-left', $layout)\n            });\n        },\n\n        /**\n         * Initialize and load the test runner proxy\n         * @returns {proxy}\n         */\n        loadProxy() {\n            const { proxyProvider, serviceCallId, bootstrap, timeout } = this.getConfig();\n            return proxyFactory(proxyProvider || 'qtiTestReviewProxy', { serviceCallId, bootstrap, timeout });\n        },\n\n        /**\n         * Initialization of the provider, called during test runner init phase.\n         *\n         * We install behaviors during this phase (ie. even handlers)\n         * and we call proxy.init.\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} to chain proxy.init\n         */\n        init() {\n            const dataHolder = this.getDataHolder();\n            const areaBroker = this.getAreaBroker();\n            const load = () => {\n                const testContext = this.getTestContext();\n                if (testContext && testContext.itemIdentifier) {\n                    this.loadItem(testContext.itemIdentifier);\n                }\n            };\n\n            areaBroker.setComponent('toolbox', toolboxFactory());\n            areaBroker.getToolbox().init();\n\n            this.assetManager = assetManagerFactory();\n\n            // first and second tab will show block and navigate to panel or content\n            const createJumplinks = container => {\n                container.on('click', e => {\n                    if (e.target.classList.contains('jumplink')) {\n                        e.preventDefault();\n                        e.target.blur();\n                        const where = e.target.dataset.area;\n                        areaBroker.getArea(where).find(':not(.hidden)[tabindex]').first().focus();\n                    }\n                });\n                container.on('focusin', e => {\n                    if (e.target.classList.contains('jumplink')) {\n                        const where = e.target.dataset.area;\n                        areaBroker.getArea(where).addClass('focused');\n                    }\n                });\n                container.on('focusout', e => {\n                    if (e.target.classList.contains('jumplink')) {\n                        const where = e.target.dataset.area;\n                        areaBroker.getArea(where).removeClass('focused');\n                    }\n                });\n            };\n            createJumplinks(areaBroker.getContainer().find('.jumplinks'));\n\n            /*\n             * Install behavior on events\n             */\n            this.on('ready', () => {\n                load();\n            })\n                .on('loaditem', (itemRef, itemData) => {\n                    dataHolder.set('itemIdentifier', itemRef);\n                    dataHolder.set('itemData', itemData);\n                })\n                .on('renderitem', () => {\n                    this.trigger('enabletools enablenav');\n                })\n                .on('move', function (direction, scope, ref) {\n                    const testContext = this.getTestContext();\n                    const testMap = this.getTestMap();\n                    const testNavigator = testNavigatorFactory(testContext, testMap);\n                    const newTestContext = testNavigator.navigate(direction, scope || 'item', ref);\n                    this.unloadItem(testContext.itemIdentifier);\n                    this.setTestContext(newTestContext);\n                })\n                .on('unloaditem', () => {\n                    load();\n                })\n                .on('resumeitem', () => {\n                    this.trigger('enableitem enablenav');\n                })\n                .on('disableitem', () => {\n                    this.trigger('disabletools');\n                })\n                .on('enableitem', () => {\n                    this.trigger('enabletools');\n                })\n                .on('error', () => {\n                    this.trigger('disabletools enablenav');\n                })\n                .on('finish leave', () => {\n                    this.trigger('disablenav disabletools');\n                    this.flush();\n                })\n                .on('flush', () => {\n                    this.destroy();\n                });\n\n            return this.getProxy()\n                .init()\n                .then(data => {\n                    if (data.testMap && _.isEmpty(mapHelper.getJumps(data.testMap))) {\n                        mapHelper.createJumpTable(data.testMap);\n                    }\n                    dataHolder.set('testMap', data.testMap);\n                    dataHolder.set('testContext', data.testContext);\n                    dataHolder.set('testData', data.testData);\n                    dataHolder.set('testResponses', data.testResponses);\n\n                    return Promise.all([getSequenceNumber(this), getSequenceStore()])\n                        .then(([sequenceNumber, sequenceStore]) => sequenceStore.setSequenceNumber(sequenceNumber))\n                        .then(() => data);\n                });\n        },\n\n        /**\n         * Rendering phase of the test runner\n         *\n         * Attach the test runner to the DOM\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        render() {\n            const config = this.getConfig();\n            const areaBroker = this.getAreaBroker();\n\n            config.renderTo.append(areaBroker.getContainer());\n\n            areaBroker.getToolbox().render(areaBroker.getToolboxArea());\n        },\n\n        /**\n         * LoadItem phase of the test runner\n         *\n         * We call the proxy in order to get the item data\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @returns {Promise} that calls in parallel the state and the item data\n         */\n        loadItem(itemIdentifier) {\n            return this.getProxy().getItem(itemIdentifier);\n        },\n\n        /**\n         * RenderItem phase of the test runner\n         *\n         * Here we initialize the item runner and wrap it's call to the test runner\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @param {Object} itemData - The definition data of the item\n         * @returns {Promise} resolves when the item is ready\n         */\n        renderItem(itemIdentifier, itemData) {\n            const areaBroker = this.getAreaBroker();\n\n            const changeState = () => {\n                this.setItemState(itemIdentifier, 'changed', true);\n            };\n\n            return new Promise((resolve, reject) => {\n                itemData.content = itemData.content || {};\n\n                const view = 'reviewRenderer';\n                const assetManager = this.assetManager;\n                assetManager.setData('baseUrl', itemData.baseUrl);\n                assetManager.setData('itemIdentifier', itemIdentifier);\n                assetManager.setData('assets', itemData.content.assets);\n\n                this.itemRunner = qtiItemRunner(itemData.content.type, itemData.content.data, { assetManager, view })\n                    .on('warning', err => this.trigger('warning', err))\n                    .on('error', err => {\n                        this.trigger('enablenav');\n                        reject(err);\n                    })\n                    .on('init', function onItemRunnerInit() {\n                        const { state, portableElements } = itemData;\n                        this.render(areaBroker.getContentArea(), { state, portableElements });\n                    })\n                    .on('render', function onItemRunnerRender() {\n                        this.on('responsechange', changeState);\n                        this.on('statechange', changeState);\n                        resolve();\n                    })\n                    .init();\n            });\n        },\n\n        /**\n         * UnloadItem phase of the test runner\n         *\n         * Item clean up\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} resolves when the item is cleared\n         */\n        unloadItem() {\n            this.trigger('beforeunloaditem disablenav disabletools');\n\n            if (this.itemRunner) {\n                return new Promise(resolve => {\n                    this.itemRunner.on('clear', resolve).clear();\n                });\n            }\n            return Promise.resolve();\n        },\n\n        /**\n         * Destroy phase of the test runner\n         *\n         * Clean up\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        destroy() {\n            const areaBroker = this.getAreaBroker();\n\n            // prevent the item to be displayed while test runner is destroying\n            if (this.itemRunner) {\n                this.itemRunner.clear();\n            }\n            this.itemRunner = null;\n\n            if (areaBroker) {\n                areaBroker.getToolbox().destroy();\n            }\n\n            // we remove the store(s) only if the finish step was reached\n            if (this.getState('finish')) {\n                return this.getTestStore().remove();\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner proxy for the QTI Test Review, relying on remote services to get the data\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('ltiTestReview/review/proxy/qtiTestReviewProxy',[\n    'lodash',\n    'core/promiseQueue',\n    'core/request',\n    'core/communicator',\n    'ltiTestReview/review/config/qtiTestReviewConfig'\n], function (_, promiseQueue, coreRequest, communicatorFactory, configFactory) {\n    'use strict';\n\n    /**\n     * QTI proxy definition\n     * Related to remote services calls\n     * @typedef {Object} qtiTestReviewProxy\n     */\n    return {\n\n        name: 'qtiTestReviewProxy',\n\n        /**\n         * Installs the proxy\n         */\n        install() {\n            /**\n             * A promise queue to ensure requests run sequentially\n             */\n            this.queue = promiseQueue();\n\n            /**\n             * Proxy request function. Returns a promise\n             * Applied options: asynchronous call, JSON data, no cache\n             * @param {String} url\n             * @param {Object} [reqParams]\n             * @param {String} [contentType] - to force the content type\n             * @param {Boolean} [noToken] - to disable the token\n             * @returns {Promise}\n             */\n            this.request = (url, reqParams, contentType, noToken) => {\n                return coreRequest({\n                    url: url,\n                    data: reqParams,\n                    method: reqParams ? 'POST' : 'GET',\n                    contentType: contentType,\n                    noToken: noToken,\n                    background: false,\n                    sequential: true,\n                    timeout: this.configStorage.getTimeout()\n                })\n                    .then(response => {\n                        this.setOnline();\n\n                        if (response && response.success) {\n                            return Promise.resolve(response);\n                        } else {\n                            return Promise.reject(response);\n                        }\n                    })\n                    .catch(error => {\n                        if (error.data && this.isConnectivityError(error.data)) {\n                            this.setOffline('request');\n                        }\n                        return Promise.reject(error);\n                    });\n            };\n        },\n\n        /**\n         * Initializes the proxy\n         * @param {Object} config - The config provided to the proxy factory\n         * @param {String} config.serviceCallId - The URI of the service call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The proxy will be fully initialized on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        init(config, params) {\n            // store config in a dedicated configStorage\n            this.configStorage = configFactory(config || {});\n\n            // request for initialization\n            return this.request(this.configStorage.getTestActionUrl('init'), params, void 0, true);\n        },\n\n        /**\n         * Uninstalls the proxy\n         * @returns {Promise} - Returns a promise. The proxy will be fully uninstalled on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        destroy() {\n            // no request, just a resources cleaning\n            this.configStorage = null;\n            this.queue = null;\n\n            // the method must return a promise\n            return Promise.resolve();\n        },\n\n        /**\n         * Calls an action related to the test\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callTestAction(action, params) {\n            return this.request(this.configStorage.getTestActionUrl(action), params);\n        },\n\n        /**\n         * Calls an action related to a particular item\n         * @param {String} itemIdentifier - The identifier of the item for which call the action\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callItemAction(itemIdentifier, action, params) {\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, action), params);\n        },\n\n        /**\n         * Gets an item definition by its identifier, also gets its current state\n         * @param {String} itemIdentifier - The identifier of the item to get\n         * @param {Object} [params] - additional parameters\n         * @returns {Promise} - Returns a promise. The item data will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        getItem(itemIdentifier, params) {\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, 'getItem'), params, void 0, true);\n        },\n\n        /**\n         * Builds the communication channel\n         * @returns {communicator|null} the communication channel\n         */\n        loadCommunicator() {\n            const config = this.configStorage.getCommunicationConfig();\n            if (config.enabled) {\n                communicatorFactory(config.type, config.params);\n            }\n            return null;\n        }\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.previewer-component{background:inherit}.previewer-component.fullpage{position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000;background:#fff}.previewer-component.fullpage .test-review-scope{height:100vh}.previewer-component.readonly .qti-item::before{content:none;display:none}\\n\\n/*# sourceMappingURL=ltiTestReview/review/component/css/qtiTestReviewComponent.css.map */@-o-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@-moz-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@-webkit-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}.loading-bar{height:6px;position:absolute;width:100%;top:0px;display:none;z-index:10000;cursor:progress}.loading-bar.fixed{position:fixed;width:100%}.loading-bar.fixed:before{top:0 !important}.loading-bar.loading{display:block;overflow:hidden;top:58px}.loading-bar.loading:before{position:absolute;content:\\\"\\\";height:6px;width:20%;display:block;transform:translateZ(0);background:-webkit-linear-gradient(to right, transparent 0%, rgb(195, 90, 19) 20%, rgb(195, 90, 19) 80%, transparent 100%);background:-moz-linear-gradient(to right, transparent 0%, rgb(195, 90, 19) 20%, rgb(195, 90, 19) 80%, transparent 100%);background:-ms-linear-gradient(to right, transparent 0%, rgb(195, 90, 19) 20%, rgb(195, 90, 19) 80%, transparent 100%);background:-o-linear-gradient(to right, transparent 0%, rgb(195, 90, 19) 20%, rgb(195, 90, 19) 80%, transparent 100%);background:linear-gradient(to right, transparent 0%, rgb(195, 90, 19) 20%, rgb(195, 90, 19) 80%, transparent 100%);-webkit-animation:loadingbar 5s linear infinite;-moz-animation:loadingbar 5s linear infinite;-ms-animation:loadingbar 5s linear infinite;-o-animation:loadingbar 5s linear infinite;animation:loadingbar 5s linear infinite}.loading-bar.loading.loadingbar-covered{top:0px;overflow-y:visible}.loading-bar.loading.loadingbar-covered:before{top:86px}.no-version-warning .loading-bar.loadingbar-covered:before{top:58px}.action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4}.action-bar li{float:left}.action-bar li .li-inner{padding-bottom:1px;text-decoration:none !important;outline:0;display:inline-block;color:inherit}.action-bar li .li-inner:hover{color:#fff}.action-bar li span.glyph{text-shadow:0 0 0 rgba(0,0,0,0);color:inherit}.action-bar li input{width:100%;font-size:12px;font-size:1.2rem;padding:2px 4px}.action-bar li.active .li-inner{color:#fff}.action-bar.horizontal-action-bar{padding:5px;height:35px}.action-bar.horizontal-action-bar .search-area{margin:2px 0 0 0;border:none;float:right;display:inline-block;position:relative}.action-bar.horizontal-action-bar .search-area input{padding-right:34px;min-width:250px !important}.action-bar.horizontal-action-bar .search-area .search-area-buttons-container{position:absolute;top:0;right:0}.action-bar.horizontal-action-bar .search-area .search-area-buttons-container .icon-ul{display:none}.action-bar.horizontal-action-bar .search-area .search-area-buttons-container.has-results-counter{right:5px}.action-bar.horizontal-action-bar .search-area .search-area-buttons-container.has-results-counter .icon-ul{display:initial}.action-bar.horizontal-action-bar .search-area .icon-find,.action-bar.horizontal-action-bar .search-area .icon-ul{cursor:pointer;background:rgba(0,0,0,0);height:19px;margin:1px 0;border:1px dashed rgba(0,0,0,0)}.action-bar.horizontal-action-bar .search-area .icon-find::before,.action-bar.horizontal-action-bar .search-area .icon-ul::before{color:#333;vertical-align:top}.action-bar.horizontal-action-bar .search-area .icon-find:focus,.action-bar.horizontal-action-bar .search-area .icon-ul:focus{outline:none;border-color:#333}.action-bar.horizontal-action-bar .search-area .icon-help{position:absolute;right:5px;top:-1px;text-shadow:0 0 rgba(0,0,0,0);color:#fff;cursor:pointer;display:block;width:24px;height:24px;line-height:24px;text-align:center}.action-bar.horizontal-action-bar .search-area .icon-find{padding:0;width:25px}.action-bar.horizontal-action-bar .search-area .icon-ul{margin-left:4px;padding:0 2px 0 4px;position:relative}.action-bar.horizontal-action-bar .search-area .icon-ul::after{content:\\\"\\\";position:absolute;left:-5px;top:2px;bottom:2px;border-left:1px solid #ada194}.action-bar.horizontal-action-bar .search-area .icon-ul .results-counter{color:#333;margin-left:5px;display:inline;vertical-align:top;line-height:14px;font-family:\\\"Source Sans Pro\\\",sans-serif}.action-bar.horizontal-action-bar li{margin:0 1px;border:1px rgba(0,0,0,0) solid;text-align:center;float:left}.action-bar.horizontal-action-bar li .glyph{width:14px}.action-bar.horizontal-action-bar li .svg-glyph{height:14px;width:14px;margin-right:9px}.action-bar.horizontal-action-bar li.btn-info{overflow:hidden;background:rgba(0,0,0,0)}.action-bar.horizontal-action-bar li.btn-info:hover,.action-bar.horizontal-action-bar li.btn-info.active{border-color:rgba(255,255,255,.3);opacity:1}.action-bar.horizontal-action-bar li.disabled{background:none !important;text-shadow:inherit !important;opacity:.45 !important;color:inherit !important}.action-bar.horizontal-action-bar li.disabled a{cursor:not-allowed !important}.action-bar.vertical-action-bar li{max-height:60px}.action-bar.vertical-action-bar li .li-inner{height:60px;display:block;overflow:hidden;text-overflow:ellipsis;text-align:center;font-size:12px;font-size:1.2rem;line-height:12px}.action-bar.vertical-action-bar li .glyph{display:block;margin:12px auto 3px;width:20px;height:20px}.action-bar.tree-action-bar{background:#f3f1ef;position:relative;left:-1px;padding:0;margin:0 2.8571428571% 8px 2.8571428571%;width:94.6428571429%;font-size:13px;font-size:1.3rem}.action-bar.tree-action-bar li{background:rgba(255,255,255,.5);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;line-height:1.3;padding:0;text-align:center;float:left;width:65px;height:65px;margin:0 1px 1px 0}.action-bar.tree-action-bar li .glyph,.action-bar.tree-action-bar li .svg-glyph{display:block;color:#0e5d91;margin:12px auto 1px !important}.action-bar.tree-action-bar li .svg-glyph{width:20px;height:20px}.action-bar.tree-action-bar li .glyph{font-size:17px !important;font-size:1.7rem !important}.action-bar.tree-action-bar li .li-inner{display:block;height:65px;padding:2px;font-size:11px;font-size:1.1rem;color:#222}.action-bar.tree-action-bar li:hover{background:#ddd;color:#666}.action-bar .tree-filters{width:160px;position:relative}.action-bar .tree-filters input{padding-right:24px}.action-bar .tree-filters span{position:absolute;right:3px;color:#555;width:22px;top:2px;line-height:20px;display:inline-block;text-align:center;text-shadow:0 0 0 rgba(0,0,0,0);border-left:1px solid #ddd;cursor:pointer}.action-bar .tree-filters span.icon-close{display:none}.action-bar .tree-filters span:hover{color:#0e5d91}@media(max-width: 1150px){.action-bar.horizontal-action-bar .search-area{float:none;position:absolute;right:0}.action-bar.horizontal-action-bar .search-area input{padding-right:30px;min-width:auto !important;width:150px}.action-bar.horizontal-action-bar .search-area input:focus{width:220px}}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area{float:none;position:absolute;right:0}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area input{padding-right:30px;min-width:auto !important;width:150px}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area input:focus{width:220px}.section-container{top:0 !important}.section-container .flex-container-full{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 100%;-webkit-flex:0 0 100%;flex:0 0 100%}.section-container .flex-container-half{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 50%;-webkit-flex:0 0 50%;flex:0 0 50%}.section-container .flex-container-third{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 33.3333333333%;-webkit-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%}.section-container .flex-container-quarter{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 25%;-webkit-flex:0 0 25%;flex:0 0 25%}.section-container .flex-container-remaining{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:1 1 480px;-webkit-flex:1 1 480px;flex:1 1 480px}.section-container .flex-container-main-form{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 500px;-webkit-flex:0 0 500px;flex:0 0 500px;margin:0 20px 20px 0;width:100%}.section-container .flex-container-main-form .form-content{max-width:100%}.section-container .flex-container-navi{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 280px;-webkit-flex:0 0 280px;flex:0 0 280px}.section-container .section-header{border:none}.section-container .content-panel{width:100%;height:100%;margin:0;padding:0;border:none !important;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:flex-start;justify-content:flex-start;-webkit-align-content:flex-start;align-content:flex-start;-webkit-align-items:stretch;align-items:stretch}.section-container .tab-container{border:none;display:none;list-style-type:none;padding:0;margin:0}.section-container .tab-container li{float:left;position:relative;top:0;padding:0;margin:0 1px 0px 0;border-top:1px solid #f3f1ef !important;border-bottom:1px solid #f3f1ef !important;background:#f3f1ef !important}.section-container .tab-container li a{top:0 !important;margin-bottom:0 !important;padding:6px 16px;text-decoration:none;min-height:32px;color:#222;float:left}.section-container .tab-container li.active,.section-container .tab-container li:hover{border-bottom-color:#4a86ad !important;border-top-color:#6e9ebd !important;background:#266d9c !important}.section-container .tab-container li.active a,.section-container .tab-container li:hover a{background:rgba(0,0,0,0) !important;border-color:rgba(0,0,0,0) !important;color:#fff !important;text-shadow:1px 1px 0 rgba(0,0,0,.2)}.section-container .tab-container li.disabled:hover{background:#f3f1ef !important}.section-container .tab-container li.disabled:hover a{cursor:not-allowed !important;color:#222 !important}.section-container .navi-container{display:none;background:#f3f1ef;-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 280px;-webkit-flex:0 0 280px;flex:0 0 280px;border-right:1px #ddd solid}.section-container .navi-container .block-title{font-size:14px;font-size:1.4rem;padding:2px 8px;margin:0}.section-container .navi-container .tree-action-bar-box{margin:10px 0;opacity:0}.section-container .navi-container .tree-action-bar-box.active{opacity:1;-webkit-opacity:0.25s ease-in-out;-moz-opacity:0.25s ease-in-out;opacity:0.25s ease-in-out}.section-container .content-container{border:none;-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:1 1 auto;-webkit-flex:1 1 auto;flex:1 1 auto;-ms-flex:1 1;-webkit-flex:1 1;flex:1 1;max-width:100%}.section-container .navi-container+.content-container{max-width:calc(100% - 280px)}.section-container .content-block{padding:20px;overflow-y:auto;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-justify-content:flex-start;justify-content:flex-start;-webkit-align-content:flex-start;align-content:flex-start;-webkit-align-items:stretch;align-items:stretch}.section-container .content-block>.grid-container{width:100%}.section-container .content-block .data-container-wrapper{padding:0px 20px 0 0}.section-container .content-block .data-container-wrapper:before,.section-container .content-block .data-container-wrapper:after{content:\\\" \\\";display:table}.section-container .content-block .data-container-wrapper:after{clear:both}.section-container .content-block .data-container-wrapper>section,.section-container .content-block .data-container-wrapper .data-container{width:260px;margin:0 20px 20px 0;float:left;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.section-container .content-block .data-container-wrapper>section.double,.section-container .content-block .data-container-wrapper .data-container.double{width:540px}.section-container .content-block .data-container-wrapper>section .emptyContentFooter,.section-container .content-block .data-container-wrapper .data-container .emptyContentFooter{display:none}.section-container .content-block .data-container-wrapper>section .tree,.section-container .content-block .data-container-wrapper .data-container .tree{border:none;max-width:none;max-height:none}.section-container .content-block .data-container-wrapper>section form,.section-container .content-block .data-container-wrapper .data-container form{background:none;border:none;margin:0;padding:0}.section-container .content-block .data-container-wrapper>section>header,.section-container .content-block .data-container-wrapper>section .ui-widget-header,.section-container .content-block .data-container-wrapper .data-container>header,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header{background:#f3f1ef;border-width:0px !important;border-bottom:1px #ddd solid !important}.section-container .content-block .data-container-wrapper>section>header h1,.section-container .content-block .data-container-wrapper>section>header h6,.section-container .content-block .data-container-wrapper>section .ui-widget-header h1,.section-container .content-block .data-container-wrapper>section .ui-widget-header h6,.section-container .content-block .data-container-wrapper .data-container>header h1,.section-container .content-block .data-container-wrapper .data-container>header h6,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header h1,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header h6{padding:4px;margin:0;font-size:14px;font-size:1.4rem}.section-container .content-block .data-container-wrapper>section>div,.section-container .content-block .data-container-wrapper>section .ui-widget-content,.section-container .content-block .data-container-wrapper>section .container-content,.section-container .content-block .data-container-wrapper .data-container>div,.section-container .content-block .data-container-wrapper .data-container .ui-widget-content,.section-container .content-block .data-container-wrapper .data-container .container-content{border-width:0px !important;overflow-y:auto;min-height:250px;padding:5px}.section-container .content-block .data-container-wrapper>section>div .icon-grip,.section-container .content-block .data-container-wrapper>section .ui-widget-content .icon-grip,.section-container .content-block .data-container-wrapper>section .container-content .icon-grip,.section-container .content-block .data-container-wrapper .data-container>div .icon-grip,.section-container .content-block .data-container-wrapper .data-container .ui-widget-content .icon-grip,.section-container .content-block .data-container-wrapper .data-container .container-content .icon-grip{cursor:move}.section-container .content-block .data-container-wrapper>section>footer,.section-container .content-block .data-container-wrapper .data-container>footer{min-height:33px}.section-container .content-block .data-container-wrapper>section>footer,.section-container .content-block .data-container-wrapper>section .data-container-footer,.section-container .content-block .data-container-wrapper .data-container>footer,.section-container .content-block .data-container-wrapper .data-container .data-container-footer{background:#f3f1ef;text-align:right !important;padding:4px;border-width:0px !important;border-top:1px #ddd solid !important}.section-container .content-block .data-container-wrapper>section>footer .square,.section-container .content-block .data-container-wrapper>section .data-container-footer .square,.section-container .content-block .data-container-wrapper .data-container>footer .square,.section-container .content-block .data-container-wrapper .data-container .data-container-footer .square{width:28px}.section-container .content-block .data-container-wrapper>section>footer .square span,.section-container .content-block .data-container-wrapper>section .data-container-footer .square span,.section-container .content-block .data-container-wrapper .data-container>footer .square span,.section-container .content-block .data-container-wrapper .data-container .data-container-footer .square span{padding:0;left:0}.section-container .content-block .data-container-wrapper>section ol,.section-container .content-block .data-container-wrapper .data-container ol{margin:0 0 0 15px;padding:10px}.section-container .content-block #form-container.ui-widget-content{border:none !important}.section-container .content-block form:not(.list-container){border:1px #ddd solid;background:#f3f1ef;padding:30px;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.section-container .content-block [class^=btn-],.section-container .content-block [class*=\\\" btn-\\\"]{margin:0 2px}.test-review-scope{position:relative;display:flex;flex-direction:column;height:calc(100vh - 99px)}.test-review-scope .test-runner-sections{flex:1 1 0;overflow:hidden;display:flex;flex-direction:row}.test-review-scope .test-sidebar{background:#f3f1ef;flex:0 1 auto;overflow-y:auto;display:flex;flex-direction:column;justify-content:flex-start;max-width:300px;min-width:300px}.test-review-scope .test-sidebar>*{width:299px}@media only screen and (max-device-width: 800px){.test-review-scope .test-sidebar{max-width:200px;min-width:200px}.test-review-scope .test-sidebar>*{width:199px}}@media only screen and (min-device-width: 800px)and (max-device-width: 1280px){.test-review-scope .test-sidebar{max-width:250px;min-width:250px}.test-review-scope .test-sidebar>*{width:249px}}.test-review-scope .test-sidebar .panel-box{flex:1 1 auto;overflow:hidden}.test-review-scope .test-sidebar-left{border-right:1px #ddd solid}.test-review-scope .test-sidebar-right{border-left:1px #ddd solid}.test-review-scope .content-wrapper{position:relative;flex:1 1 0;display:flex;flex-direction:column;height:100%;padding:30px 30px 0 30px}@media only screen and (max-device-width: 800px){.test-review-scope .content-wrapper{max-width:calc(100% - 200px)}}@media only screen and (min-device-width: 800px)and (max-device-width: 1280px){.test-review-scope .content-wrapper{max-width:calc(100% - 250px)}}.test-review-scope .content-wrapper .item-tool{flex:0 0 auto}.test-review-scope .content-wrapper .item-content{flex:1 1 auto;overflow:auto;width:100%}.test-review-scope .content-wrapper .overlay{position:absolute;left:0;right:0;top:0;bottom:0;width:100%;opacity:.9}.test-review-scope .content-wrapper .overlay-full{background-color:#fff;opacity:1}.test-review-scope #qti-content,.test-review-scope .item-tool{-webkit-overflow-scrolling:touch;margin:auto;max-width:1024px;width:100%}.test-review-scope #qti-item{width:100%;min-width:100%;height:auto;overflow:visible}.test-review-scope .qti-item{padding:0 0 30px 0}.test-review-scope .size-wrapper{margin:auto;max-width:1280px;width:100%}.test-review-scope #qti-rubrics{margin:auto;max-width:1024px;width:100%}.test-review-scope #qti-rubrics .qti-rubricBlock{margin:20px 0}.test-review-scope #qti-rubrics .hidden{display:none}.test-review-scope .jumplink{position:fixed;left:-9999px;background-color:#fff;color:#222;text-decoration:underline;outline:none;box-shadow:inset 0 0 0px 3px #0e5d91;height:calc(5px + 105px);width:340px;display:flex;justify-content:center;align-items:center}.test-review-scope .jumplink:focus{visibility:visible;top:0px;left:0px;z-index:1000;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}.test-review-scope a[tabindex]:focus,.test-review-scope .focused{box-shadow:inset 0 0 0px 3px #0e5d91}.no-controls .test-review-scope{height:100vh}\\n\\n/*# sourceMappingURL=ltiTestReview/review/provider/css/qtiTestReviewProvider.css.map */.item-answer{position:relative;display:flex;flex-direction:column;background-color:#fff}.item-answer .item-answer-bar{position:relative;display:flex;flex-direction:row;align-content:stretch;align-items:flex-end;height:44px}.item-answer .item-answer-tabs{position:relative;flex:0 0 auto;height:100%}.item-answer .item-answer-tabs .answer-tabs{list-style:none;padding:0;margin:0;display:inline-flex;flex-direction:row;flex-wrap:nowrap;height:100%}.item-answer .item-answer-tabs .answer-tabs .tab{border-top:2px solid #fff;border-bottom:2px solid #0e5d91;padding:0;margin:0;height:100%}.item-answer .item-answer-tabs .answer-tabs .tab .action{border-radius:0;padding:5px 15px;font-weight:bold;text-transform:uppercase;display:flex;align-items:center;height:100%;min-width:200px;background-color:#f3f1ef;color:#222;text-shadow:none}.item-answer .item-answer-tabs .answer-tabs .tab .action .icon{display:inline-block;font-size:2.5rem;font-weight:bold;padding:0}.item-answer .item-answer-tabs .answer-tabs .tab .action .label{padding-top:5px;display:inline-block;text-align:center;flex:1 1 auto}.item-answer .item-answer-tabs .answer-tabs .tab.active{border:2px solid #0e5d91;border-bottom:0 none}.item-answer .item-answer-tabs .answer-tabs .tab.active:last-child:first-child{border:0 none;border-top:2px solid #fff;border-bottom:2px solid #0e5d91}.item-answer .item-answer-tabs .answer-tabs .tab.active .action{color:#222;background-color:#fff}.item-answer .item-answer-score{position:relative;flex:1 0 auto;text-align:right;font-weight:bold;padding:10px 5px;border-bottom:2px solid #0e5d91}.item-answer .item-answer-status{position:relative;height:40px;line-height:20px;font-weight:bold;padding-top:10px;text-transform:uppercase;color:#950e22}.item-answer .icon-correct:before{content:\\\"\\\"}.item-answer .icon-incorrect:before{content:\\\"\\\"}.item-answer .icon-answered:before{content:\\\"\\\"}.item-answer .icon-skipped:before{content:\\\"\\\"}.item-answer .icon-informational:before{content:\\\"\\\"}.item-answer:not(.show-correct):not(.show-score) .item-answer-bar{display:none}.item-answer:not(.show-score) .item-answer-bar .item-answer-tabs .answer-tabs .tab .icon:not(.icon-informational){display:none}.item-answer.show-correct.correct .icon{color:#0b743c}.item-answer.show-correct.incorrect .icon,.item-answer.show-correct.skipped .icon{color:#950e22}.item-answer.show-correct.pending .icon{color:#6e6e6e}.item-answer.show-correct.partial .icon{color:#ad5700}.item-answer.disabled,.item-answer button[disabled]{background-color:inherit !important}.item-answer :focus{outline:0 none}.item-answer:not(.disabled) .navigable{position:relative}.item-answer:not(.disabled) .navigable:focus{outline:3px solid #0e5d91;outline-offset:-1px}.item-answer:not(.disabled) li.active .navigable:focus{outline-offset:-2px}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/content/item-answer/css/item-answer.css.map */.next-prev{margin:10px;display:flex;flex-direction:row-reverse;align-content:stretch}.next-prev .action{border-radius:0;text-transform:uppercase;flex:1 0 auto;margin-right:4px;height:36px;line-height:36px}.next-prev .action.right{margin-right:0}.next-prev .action.no-label{flex:0 0 auto}.next-prev .action.no-label .icon{padding:0}.next-prev .action.right .icon{float:right;display:block;margin-left:10px;width:10px}.next-prev .action .icon{height:36px;line-height:36px;font-size:2rem}.next-prev :focus{outline:0 none}.next-prev:not(.disabled) .action{position:relative}.next-prev:not(.disabled) .action:focus::after{content:\\\" \\\";position:absolute;top:-4px;left:-4px;bottom:-4px;right:-4px;border:3px solid #0e5d91}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/navigation/next-prev/css/buttons.css.map */.review-panel.accordion{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;color:#222;position:relative;display:flex;flex-direction:column;justify-content:flex-start;cursor:default;width:100%;height:100%;padding:10px}.review-panel.accordion .review-panel-label{display:block;white-space:nowrap}.review-panel.accordion .review-panel-score{display:block;white-space:nowrap}.review-panel.accordion .collapsible>.review-panel-label{cursor:pointer;width:100%;line-height:3rem;padding:0 8px;font-size:1.5rem}.review-panel.accordion .collapsible>.review-panel-label .collapsible-arrow::before{font-family:\\\"tao\\\" !important;speak:never;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\";line-height:inherit;float:right}.review-panel.accordion .collapsible>.review-panel-block{display:none}.review-panel.accordion .collapsible.expanded>.review-panel-label .collapsible-arrow::before{content:\\\"\\\"}.review-panel.accordion .collapsible.expanded>.review-panel-block{display:block}.review-panel.accordion.disabled .review-panel-filters .review-panel-filter{cursor:not-allowed}.review-panel.accordion.disabled .collapsible>.review-panel-label{cursor:not-allowed}.review-panel.accordion.disabled .review-panel-item{cursor:not-allowed}.review-panel.accordion :focus{outline:0 none}.review-panel.accordion:not(.disabled) .navigable{position:relative}.review-panel.accordion:not(.disabled) .navigable:focus:after{content:\\\" \\\";position:absolute;top:0px;left:0px;bottom:0px;right:0px;border:3px solid #0e5d91;z-index:100}.review-panel.accordion:not(.disabled) .review-panel-filters .review-panel-filter:focus:after{top:-5px;left:-5px;bottom:-5px;right:-5px}.review-panel.accordion .review-panel-header{display:flex;flex-direction:row;justify-content:space-between;padding:5px 8px;background-color:#d4d5d7;color:#222}.review-panel.accordion .review-panel-header .review-panel-label{font-size:1.5rem;font-weight:600}.review-panel.accordion .review-panel-header .review-panel-score{font-size:1.5rem;font-weight:bold}.review-panel.accordion .review-panel-footer{display:flex;flex-direction:row;justify-content:space-between;padding:5px 8px;background-color:#f3f1ef;color:#222}.review-panel.accordion .review-panel-footer .review-panel-label{font-size:1.4rem;padding-left:30px}.review-panel.accordion .review-panel-footer .review-panel-score{font-size:1.2rem}.review-panel.accordion .review-panel-filters{display:flex;flex-direction:row;justify-content:space-evenly;padding:3rem 0 1rem 0}.review-panel.accordion .review-panel-filters .review-panel-filter{display:block;border-bottom:1px solid rgba(0,0,0,0);cursor:pointer;padding:0 8px}.review-panel.accordion .review-panel-filters .review-panel-filter.active{border-bottom:1px solid #222}.review-panel.accordion .review-panel-filters .review-panel-filter .review-panel-label{font-size:1.4rem;font-weight:bold}.review-panel.accordion .review-panel-content{flex:0 1 auto;overflow-y:auto}.review-panel.accordion .review-panel-part{margin-top:1px}.review-panel.accordion .review-panel-part>.review-panel-label{background-color:#dddfe2}.review-panel.accordion .review-panel-part>.review-panel-label:hover{background-color:#c6cacf}.review-panel.accordion .review-panel-part.active>.review-panel-label{background-color:#c0c4ca}.review-panel.accordion .review-panel-section>.review-panel-label{background-color:#efecea;border-bottom:1px solid #fff}.review-panel.accordion .review-panel-section>.review-panel-label:hover{background-color:#ebe8e4}.review-panel.accordion .review-panel-section.active>.review-panel-label{background-color:#ded9d4}.review-panel.accordion .review-panel-item{display:flex;flex-direction:row;justify-content:space-between;background:#fff;cursor:pointer;line-height:3rem;padding:0 8px;margin:1px 0}.review-panel.accordion .review-panel-item .review-panel-label{flex:1 1 auto;width:calc(100% - 30px);text-align:left;overflow:hidden;text-overflow:ellipsis}.review-panel.accordion .review-panel-item .review-panel-score{flex:0 0 auto;width:30px;text-align:right}.review-panel.accordion .review-panel-item:first-child{margin-top:0}.review-panel.accordion .review-panel-item.active{background:#f4f7f8}.review-panel.accordion .review-panel-item:hover{background:#eef3f5}.review-panel.accordion .review-panel-item .review-panel-label{font-size:1.4rem}.review-panel.accordion .review-panel-item .review-panel-score{font-size:1.2rem}.review-panel.accordion .review-panel-item .review-panel-label:before{font-family:\\\"tao\\\" !important;speak:never;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\" \\\";display:inline-block;text-align:right;color:#ada194;width:30px;padding-right:5px;line-height:inherit}.review-panel.accordion .review-panel-item.item-info .review-panel-label:before{content:\\\"\\\"}.review-panel.accordion .review-panel-item.item-skipped .review-panel-label:before{content:\\\"\\\"}.review-panel.accordion .review-panel-item.item-default .review-panel-label:before{content:\\\"\\\"}.review-panel.accordion .review-panel-item.item-correct .review-panel-label:before{content:\\\"\\\";color:#0e914b}.review-panel.accordion .review-panel-item.item-incorrect .review-panel-label:before{content:\\\"\\\";color:#ba122b}.review-panel.accordion .review-panel-item.item-score-pending .review-panel-label:before{content:\\\"\\\";color:#6e6e6e}.review-panel.accordion .review-panel-item.item-score-partial .review-panel-label:before{content:\\\"\\\";color:#ad5700}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/navigation/review-panel/css/accordion-panel.css.map */.review-panel.fizzy{color:#222;position:relative;display:flex;flex-direction:column;justify-content:flex-start;cursor:default;width:100%;height:100%;padding:0 1rem}.review-panel.fizzy .review-panel-label{display:block;white-space:nowrap}.review-panel.fizzy .review-panel-score{display:block;white-space:nowrap}.review-panel.fizzy .review-panel-header .review-panel-title{font-size:2rem;font-weight:bold;border-bottom:1px solid #cec7bf;margin:2rem 1rem 0 1rem;padding:.4rem 0 .8rem 0}.review-panel.fizzy .review-panel-header .review-panel-score-header{display:flex;flex-direction:row;justify-content:space-between;padding:.7rem 1rem;color:#222;font-size:1.4rem;font-weight:bold}.review-panel.fizzy .review-panel-content{flex:1 1 auto;overflow-y:auto}.review-panel.fizzy .review-panel-content .review-panel-sections{padding:0 0 4rem 0;list-style:none}.review-panel.fizzy .review-panel-content .review-panel-sections .review-panel-label{font-size:1.6rem;margin:1.5rem 1rem 1rem 1rem;display:block}.review-panel.fizzy .review-panel-footer{display:flex;flex-direction:row;justify-content:space-between;padding:.8rem 1rem 0 1rem;color:#222;font-size:1.4rem;font-weight:bold}.review-panel.fizzy .review-panel-footer .review-panel-label{padding:0}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/navigation/review-panel/css/fizzy-panel.css.map */');\n","\ndefine(\"ltiTestReview/loader/ltiTestReview.bundle\", function(){});\n","define(\"ltiTestReview/loader/ltiTestReview.min\", [\"taoItems/loader/taoItemsRunner.min\",\"taoTests/loader/taoTestsRunner.min\",\"taoQtiItem/loader/taoQtiItemRunner.min\",\"taoQtiTest/loader/taoQtiTestRunner.min\",\"taoQtiTest/loader/testPlugins.min\",\"taoQtiTestPreviewer/loader/qtiPreviewer.min\"], function(){});\n"],"mappings":"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"}